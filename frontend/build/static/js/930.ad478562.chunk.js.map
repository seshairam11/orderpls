{"version":3,"file":"static/js/930.ad478562.chunk.js","mappings":"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","sources":["ApiOP/useFetch.js","CommonOP/OPValidations.js","ComponentOP/OPNotification.js","ComponentOP/OPTextBox.js","assets/img/notify|sync|/^/.*/.jpg$"],"sourcesContent":["import { useState } from \"react\";\r\nconst useFetch = () => {\r\n  const [responseData, setResponseData] = useState([]);\r\n  const [isLoadingApi, setisLoading] = useState(false);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [apiKey, setApiKey] = useState(null);\r\n  const baseURI = \"https://orderpls.onrender.com\";\r\n\r\n  const serverRequest = (serverRequestParam) => {\r\n    const fetchURL = baseURI + serverRequestParam.apiUrl;\r\n    setApiKey(serverRequestParam.apikey);\r\n    setisLoading(false);\r\n    fetch(fetchURL, serverRequestParam)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((respdata) => {\r\n        setResponseData(respdata);\r\n        setisLoading(true);\r\n      })\r\n      .catch((err) => {\r\n        setisLoading(false);\r\n        setFetchError(err.message);\r\n      });\r\n  };\r\n\r\n  return { responseData, isLoadingApi, apiKey, fetchError, serverRequest };\r\n};\r\n\r\n\r\n\r\n\r\nexport default useFetch;\r\n","import React from 'react'\r\n\r\nexport const OPValidations = () => {\r\n  return function validateControls(ctl_attribute) {\r\n\r\n    if (ctl_attribute.validate.mandatory === true) {\r\n      let brewErr = checkMandatory(ctl_attribute);\r\n      if (brewErr.founderror === true) {\r\n        return brewErr;\r\n      }\r\n    }\r\n\r\n    return checkValidateDataType(ctl_attribute);\r\n  };\r\n\r\n  function checkValidateDataType(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue != \"\") {\r\n      switch (ctl_attribute.validate.datatype) {\r\n        case \"email\":\r\n          let retvalidemail = validateEmail(ctl_attribute.inputvalue);\r\n          if (retvalidemail === null) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"No Valid Email address entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"phoneno\":\r\n          let retvalidphone = validatePhoneNo(ctl_attribute.inputvalue);\r\n          let retvalidphonecode = validatePhoneCode(ctl_attribute.inputkey);\r\n          if (retvalidphone === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Phone no entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          } else if (retvalidphonecode === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Phone Code doesn't been empty\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"numeric\":\r\n          let retvalidnumeric = validateIsNumber(ctl_attribute.inputvalue);\r\n          if (retvalidnumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Accepts Only Numeric Field\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"loginid\":\r\n          let retvalidLoginid = validateIsLoginID(ctl_attribute.inputvalue);\r\n          if (retvalidLoginid === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Field entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"aadharno\":\r\n          let retvalidAadhar = validateAadharNo(ctl_attribute.inputvalue);\r\n          if (retvalidAadhar === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Aadhar no\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alpha\":\r\n          let retvalidAlpha = validateAlpha(ctl_attribute.inputvalue);\r\n          if (retvalidAlpha === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only Alphabet\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alphanumeric\":\r\n          let retvalidAlphaNumeric = validateAlphaNumeric(ctl_attribute.inputvalue);\r\n          if (retvalidAlphaNumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only AlphaNumeric\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"dropdown\":\r\n          let retvalidDropDown = validateDropDown(ctl_attribute.inputvalue);\r\n          if (retvalidDropDown === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Selection\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"username\":\r\n          let retvalidUserName = validateUserName(ctl_attribute.inputvalue);\r\n          if (retvalidUserName === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Syntax only (@ and _ )\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n\r\n        case \"hotelcode\":\r\n          let retvalidGOTID = validateHotelCode(ctl_attribute.inputvalue);\r\n          if (retvalidGOTID === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid offer ID\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"searchBox\":\r\n          let retvalidssearchbox = validateSearchBox(ctl_attribute);\r\n          if (retvalidssearchbox === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Not in Menu\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        default:\r\n          brewError.controlid = ctl_attribute.csstheme.id;\r\n          brewError.errmsg = \"\";\r\n          brewError.founderror = false;\r\n          brewError.arrayindex = ctl_attribute.arrayindex;\r\n          break;\r\n      }\r\n    }\r\n    return brewError;\r\n  }\r\n\r\n  function validatePhoneNo(phoneno) {\r\n    let a = /^\\d{10}$/;\r\n    return a.test(phoneno);\r\n  }\r\n  function validateHotelCode(hotelcode) {\r\n    let a = /^\\d{9}$/;\r\n    return a.test(hotelcode);\r\n  }\r\n\r\n  function validateUserName(username) {\r\n    let s = /^[a-zA-Z0-9\\_\\@]+$/;\r\n    return s.test(username)\r\n  }\r\n\r\n  function validateAadharNo(aadharno) {\r\n    let s = /^\\d{12}$/;\r\n    return s.test(aadharno);\r\n  }\r\n  function validateAlpha(alpha) {\r\n    let s = /^[A-Za-z\\ ]+$/;\r\n    return s.test(alpha);\r\n  }\r\n  function validateAlphaNumeric(alphanumeric) {\r\n    let s = /^[0-9a-zA-Z\\ ]+$/;\r\n    return s.test(alphanumeric);\r\n  }\r\n  function validatePhoneCode(phonecode) {\r\n    let _bool = true;\r\n    if (phonecode === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateDropDown(dropdown) {\r\n    let _bool = true;\r\n    if (dropdown === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateEmail(email) {\r\n    return email\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  }\r\n  function isOnlyNumbers(input) {\r\n    const numberRegex = /^\\d+$/;\r\n    return numberRegex.test(input);\r\n  }\r\n  function validateIsLoginID(loginid) {\r\n    if (isOnlyNumbers(loginid)) {\r\n      return validatePhoneNo(loginid);\r\n    }else if(validateEmail(loginid)){\r\n      return true;\r\n    }else if(validateUserName(loginid)){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n\r\n  }\r\n  function validateSearchBox(attribute) {\r\n    let _filterarr = attribute.dropdownlist.filter(item => item.m_value === attribute.inputvalue);\r\n    let _bool = true\r\n    if (_filterarr.length === 0) {\r\n      _bool = false\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateIsNumber(ivalue) {\r\n    return !isNaN(parseFloat(ivalue)) && isFinite(ivalue);\r\n  }\r\n  function checkMandatory(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"This field is mandatory\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    } else if (ctl_attribute.inputkey === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"Invalid Selection\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    else {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"\";\r\n      brewError.founderror = false;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    return brewError;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const OPNotification = ({ nameProps, titleProps, photoProps, bool }) => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsVisible(bool)\r\n    }, [bool]);\r\n\r\n    return (\r\n        <div className={`rectangle ${isVisible ? \"visible\" : \"invisible\"} justify-content-between`}>\r\n            {isVisible && (\r\n                <>\r\n                    <div className='d-flex align-items-center'>\r\n                        <div className='d-flex align-items-center justify-content-center'>\r\n                            <div className='notify-img p-1'>\r\n                                <img\r\n                                    src={require(`../assets/img/notify/${photoProps}.jpg`)}\r\n                                    className=\"img-cover\"\r\n                                    alt=\"notify-img\"\r\n                                    style={{ borderRadius: \"5px\" }}\r\n                                />\r\n                            </div>\r\n                            <div className='d-flex flex-column justify-content-center'>\r\n                                <h6>{nameProps} </h6>\r\n                                <p className='m-0'>{titleProps}</p>\r\n                            </div>\r\n                        </div>\r\n                        <Link\r\n                            style={{ marginLeft: \"auto\" }}\r\n                            onClick={(e) => { setIsVisible(false) }}\r\n                            className=' notify-cancel'>\r\n                            <img\r\n                                src={require(\"../assets/img/icons/circle-x.png\")}\r\n                                style={{ width: \"15px\" }}\r\n                                className=\"img-fluid  \"\r\n                                alt=\"Cancel\" />\r\n                        </Link>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}","import \"../assets/plugins/tabler-icons/tabler-icons.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { Tooltip } from \"react-tooltip\";\r\n\r\nexport const OPTextBox = ({ ctl_Attribute, rerender }) => {\r\n\r\n    const [l_rerender, l_setRerender] = useState(false)\r\n    const validate = OPValidations();\r\n    useEffect(() => { }, [rerender]);\r\n\r\n    const handleOnFocus = (e) => {\r\n        e.currentTarget.setCustomValidity(\"\")\r\n        ctl_Attribute.tooltip.isvalidation = true;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        ctl_Attribute.error.errorshow = false;\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    function handleOnBlur(e) {\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        ctl_Attribute.tooltip.isvalidation = false;\r\n        let err = validate(ctl_Attribute);\r\n        if (err.founderror == true) {\r\n            ctl_Attribute.error.errormsg = err.errmsg;\r\n            ctl_Attribute.error.errorshow = true;\r\n            e.currentTarget.setCustomValidity(err.errmsg)\r\n        }\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={ctl_Attribute.csstheme.id} className=\"col-form-label \">{ctl_Attribute.csstheme.labletext}{ctl_Attribute.validate.mandatory ? (<span className=\"text-danger\">&nbsp;*</span>) : null}</label>\r\n            <input\r\n                ref={(el) => {\r\n                    ctl_Attribute.tooltip.isfocus = el\r\n                    ctl_Attribute.tooltip.errorshow = el\r\n                }}\r\n                className={`${ctl_Attribute.csstheme.classname} ${ctl_Attribute.error.errorshow ? \"err-border\" : \"\"}`}\r\n                type=\"text\"\r\n                data-tooltip-content={ctl_Attribute.error.errorshow ? ctl_Attribute.error.errormsg : ctl_Attribute.csstheme.hinttext}\r\n                data-tooltip-id={ctl_Attribute.csstheme.id}\r\n                data-tooltip-place={ctl_Attribute.tooltip.place}\r\n                data-tooltip-class-name={ctl_Attribute.tooltip.classname}\r\n                readOnly={ctl_Attribute.csstheme.readonly}\r\n                id={ctl_Attribute.csstheme.id}\r\n                disabled={ctl_Attribute.csstheme.readonly}\r\n                maxLength={ctl_Attribute.csstheme.length}\r\n                onBlur={handleOnBlur}\r\n                onFocus={handleOnFocus}\r\n                value={ctl_Attribute.inputvalue}\r\n                onChange={handleOnChange}\r\n                autoComplete=\"off\"\r\n            // required={ctl_Attribute.validate.mandatory}\r\n            />\r\n            <Tooltip id={ctl_Attribute.csstheme.id} isOpen={ctl_Attribute.tooltip.isvalidation} />\r\n        </>\r\n    )\r\n}\r\n","var map = {\n\t\"./error.jpg\": 1960,\n\t\"./success.jpg\": 1391\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8847;"],"names":["useFetch","responseData","setResponseData","useState","isLoadingApi","setisLoading","fetchError","setFetchError","apiKey","setApiKey","serverRequest","serverRequestParam","fetchURL","apiUrl","apikey","fetch","then","response","json","respdata","catch","err","message","OPValidations","ctl_attribute","validate","mandatory","brewErr","brewError","inputvalue","controlid","csstheme","id","errmsg","founderror","arrayindex","inputkey","checkMandatory","datatype","validateEmail","retvalidphone","validatePhoneNo","retvalidphonecode","phonecode","_bool","validatePhoneCode","ivalue","isNaN","parseFloat","isFinite","loginid","input","test","validateUserName","validateIsLoginID","aadharno","alpha","alphanumeric","dropdown","validateDropDown","hotelcode","attribute","_filterarr","dropdownlist","filter","item","m_value","length","validateSearchBox","checkValidateDataType","phoneno","username","email","toLowerCase","match","OPNotification","_ref","nameProps","titleProps","photoProps","bool","isVisible","setIsVisible","useEffect","_jsx","className","children","_Fragment","_jsxs","src","require","alt","style","borderRadius","Link","marginLeft","onClick","e","width","OPTextBox","ctl_Attribute","rerender","l_rerender","l_setRerender","htmlFor","labletext","ref","el","tooltip","isfocus","errorshow","classname","error","type","errormsg","hinttext","place","readOnly","readonly","disabled","maxLength","onBlur","currentTarget","value","isvalidation","setCustomValidity","onFocus","onChange","autoComplete","Tooltip","isOpen","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}