{"version":3,"file":"static/js/726.dfc385dc.chunk.js","mappings":"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","sources":["ComponentOP/OPReadOnlyTable.js","PagesOP/OPViewMenuCard.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport \"../assets/css/dataTables.bootstrap5.min.css\"\r\nimport \"../index.css\"\r\n\r\nexport const OPReadOnlyListTable = ({\r\n    tablename,\r\n    actionButton,\r\n    tableMetaData,\r\n    colMetaData,\r\n    tableData,\r\n    handleChangeSearch,\r\n    handleClickTable,\r\n    handleSort,\r\n    handleKeyDown,\r\n    isTableChanged, }) => {\r\n    const [openIndex, setOpenIndex] = useState(null);\r\n    const optionBoxRefs = useRef([]);\r\n\r\n    useEffect(() => { handleDropDownList() }, [openIndex])\r\n\r\n    function handleDropDownList() {\r\n        if (openIndex !== null) {\r\n            const buttonRect = optionBoxRefs.current[openIndex].button.getBoundingClientRect();\r\n            const lstRect = document.getElementById(`optmenu${openIndex}`).getBoundingClientRect();\r\n            const innerHight = window.innerHeight;\r\n            // Replace with your div's ID          \r\n            const spaceBelow = innerHight - buttonRect.bottom;\r\n            const optionBox = optionBoxRefs.current[openIndex].optionBox;\r\n            if (optionBox) {\r\n                if (spaceBelow < lstRect.height) {\r\n                    // Not enough space below, position above              \r\n                    optionBox.style.top = `-${lstRect.height}px`;\r\n                } else {\r\n                    optionBox.style.top = \"33px\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnBlur() {\r\n        setOpenIndex(null);\r\n    }\r\n    function handleOnFocus(index) {\r\n        setOpenIndex(index);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"row dt-row\">\r\n            <div className=\"col-sm-12 table-responsive\"\r\n                style={{ overflowX: 'visible' }}\r\n                id='orderMenu'>\r\n                <table className='table dataTable no-footer'>\r\n                    <thead className='thead-light'>\r\n                        <tr>\r\n                            {colMetaData.map(item => {\r\n                                return (<th className='sorting'\r\n                                    // data-bs-toggle=\"dropdown\"\r\n                                    key={item.h_colindex}\r\n                                    style={{ width: (item.h_width) }}\r\n                                >\r\n                                    {item.h_name}\r\n                                </th>)\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableData.map((item, index) => {\r\n                            return (\r\n                                item.showrow && (\r\n                                    <tr key={`list${index}`} onClick={(e) => handleClickTable(index)}>\r\n                                        {item.table_value.map((tdata, tindex) => {\r\n                                            return (<td key={tdata.t_key} >\r\n                                                {tindex !== 1 && (\r\n                                                    <>\r\n                                                        {tdata.t_value}\r\n                                                    </>\r\n                                                )}\r\n                                                {tindex === 1 && (\r\n                                                    <>\r\n                                                        {\r\n                                                             tdata.t_value === \"Server\" || tdata.t_value === \"Chef\" || tdata.t_value === \"Casher\" ?\r\n                                                                < span className={`badge ${tdata.t_value === \"Server\" ? \"bg-success\" : tdata.t_value === \"Chef\" ? \"bg-blue text-white\" : tdata.t_value === \"Casher\" ? \"bg-secondary\" : \"\"}`\r\n                                                                } >\r\n                                                                    <span className=\"badge-label\">\r\n                                                                        {tdata.t_value}\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                                :\r\n                                                                <>\r\n                                                                    {tdata.t_value}\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                )}\r\n                                            </td>)\r\n                                        })}\r\n                                    </tr>\r\n                                ))\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        </div >\r\n    </>);\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\nimport { OPReadOnlyListTable } from '../ComponentOP/OPReadOnlyTable';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\n\r\nexport const OPViewMenuCard = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n    const [listMenu, setListMenu] = useState(true);\r\n    const [viewMenu, setViewMenu] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n    const tbl_menuLst = useRef({})\r\n\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n    function fnViewMenuRequest() {\r\n        let _getBody = {\r\n            companyName: getAppStoreData.companyName,\r\n        }\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/viewmenu\",\r\n            apikey: \"VIEWMENU\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n        setStartInit(false);\r\n    }\r\n\r\n    function initControl() {\r\n        if (responseData.isAuth) {\r\n            let ctlArray = [\r\n                {\r\n                    /*txt: First Name  : 0*/\r\n                    arrayindex: 0,\r\n                    csstheme: {\r\n                        labletext: \"Menu List\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_hotelname\",\r\n                        length: 20,\r\n                        readonly: false,\r\n                        hinttext: \"Enter your Hotel Name \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"alpha\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Last Name : 1*/\r\n                    arrayindex: 1,\r\n                    csstheme: {\r\n                        labletext: \"Price\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_Price\",\r\n                        length: 20,\r\n                        readonly: false,\r\n                        hinttext: \"Enter the menu price \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"numeric\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:cross : 2*/\r\n                    arrayindex: 2,\r\n                    csstheme: {\r\n                        labletext: \"Cancel\",\r\n                        classname: \"btn btn-light me-2\",\r\n                        id: \"btn_cancel\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:cross : 3*/\r\n                    arrayindex: 3,\r\n                    csstheme: {\r\n                        labletext: \"Delete\",\r\n                        classname: \"btn btn-primary\",\r\n                        id: \"btn_delete\",\r\n                    },\r\n                }\r\n            ]\r\n            ctlAttribute.current = ctlArray;\r\n            fnBuildEmployeesList(responseData.errormsg);\r\n            setStartRender(true);\r\n            setStartLoader(false);\r\n            // setStartInit(false);\r\n\r\n        } else {\r\n            console.log(responseData.errormsg);\r\n        }\r\n    }\r\n\r\n\r\n    function fnBuildEmployeesList(resTableData) {\r\n        const benchlst = resTableData\r\n            .map(item => ({\r\n                _id: item._id,\r\n                showrow: true,\r\n                table_value: [\r\n                    {\r\n                        t_key: 0,\r\n                        t_value: item.menuItem,\r\n                    },\r\n                    {\r\n                        t_key: 1,\r\n                        t_value: item.price,\r\n                    }\r\n                ]\r\n            }))\r\n\r\n        let l_tbl_menuLst = {\r\n            tablename: \"tbl_orderlist\",\r\n            tableindex: null,\r\n            tabledataid: null,\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Item's\",\r\n                    h_width: \"150px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Price\",\r\n                    h_width: \"43px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: benchlst,\r\n        };\r\n        tbl_menuLst.current = l_tbl_menuLst\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        switch (btn_id) {\r\n            case \"btn_cancel\":\r\n                setListMenu(true);\r\n                setViewMenu(false);\r\n                break;\r\n            case \"btn_delete\":\r\n                fnDeleteData();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleClickTable(index) {\r\n        const menuDetial = tbl_menuLst.current.tableData[index];\r\n        tbl_menuLst.current.tableindex = index;\r\n        tbl_menuLst.current.tabledataid = menuDetial._id;\r\n        ctlAttribute.current[0].inputvalue = menuDetial.table_value[0].t_value\r\n        ctlAttribute.current[1].inputvalue = menuDetial.table_value[1].t_value\r\n        setListMenu(false);\r\n        setViewMenu(true);\r\n    }\r\n\r\n    function fnDeleteData() {\r\n        tbl_menuLst.current.tableData.splice(tbl_menuLst.current.tableindex, 1);\r\n        let _getBody = {\r\n            _id: tbl_menuLst.current.tabledataid,\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/deletemenu\",\r\n            apikey: \"DELMENU\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n    }\r\n\r\n    function fnDeleteMenuResult() {\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current = {\r\n                name: \"Menu Deleted Successfully\",\r\n                title: responseData.errormsg.menuItem,\r\n                photo: \"success\"\r\n            }\r\n            setViewMenu(false);\r\n            setListMenu(true);\r\n            setNotify(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            fnViewMenuRequest();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                switch (apiKey) {\r\n                    case \"DELMENU\":\r\n                        fnDeleteMenuResult();\r\n                        break;\r\n                    case \"VIEWMENU\":\r\n                        initControl();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    useEffect(() => {\r\n        if (notify) {\r\n            const closeNotify = setInterval(() => {\r\n                setNotify(false);\r\n            }, 2000);\r\n            return () => clearInterval(closeNotify);\r\n        }\r\n    }, [notify]);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    View Menu list\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {listMenu &&\r\n                                        < div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                View Menu's\r\n                                                            </h5>\r\n                                                            <p>Showing menu list</p>\r\n                                                        </div>\r\n                                                        <OPReadOnlyListTable\r\n                                                            tablename={tbl_menuLst.current.tablename}\r\n                                                            actionButton={tbl_menuLst.current.actionButton}\r\n                                                            tableMetaData={tbl_menuLst.current.tableMetaData}\r\n                                                            colMetaData={tbl_menuLst.current.colMetaData}\r\n                                                            tableData={tbl_menuLst.current.tableData}\r\n                                                            handleClickTable={handleClickTable}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    {viewMenu &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                Menu Details\r\n                                                            </h5>\r\n                                                            <p>Showing Menu Details in ReadOnly Method</p>\r\n                                                        </div>\r\n                                                        <div className=\"border-bottom mb-3\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='mt-4 d-flex justify-content-end'>\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[2]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[3]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPReadOnlyListTable","_ref","tablename","actionButton","tableMetaData","colMetaData","tableData","handleChangeSearch","handleClickTable","handleSort","handleKeyDown","isTableChanged","openIndex","setOpenIndex","useState","optionBoxRefs","useRef","useEffect","buttonRect","current","button","getBoundingClientRect","lstRect","document","getElementById","spaceBelow","window","innerHeight","bottom","optionBox","height","style","top","handleDropDownList","_jsx","_Fragment","children","className","overflowX","id","_jsxs","map","item","width","h_width","h_name","h_colindex","index","showrow","onClick","e","table_value","tdata","tindex","t_value","t_key","OPViewMenuCard","startInit","setStartInit","startRender","setStartRender","startLoader","setStartLoader","rerender","setRerender","notify","setNotify","listMenu","setListMenu","viewMenu","setViewMenu","ctlAttribute","ctlNotify","tbl_menuLst","getAppStoreData","OPValidations","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","initControl","isAuth","ctlArray","arrayindex","csstheme","labletext","classname","length","readonly","hinttext","inputvalue","tooltip","place","isfocus","errorshow","isvalidation","validate","mandatory","datatype","error","errormsg","resTableData","l_tbl_menuLst","tableindex","tabledataid","showPagination","showSearch","h_txtalign","h_navigate","_id","menuItem","price","fnBuildEmployeesList","console","log","handleButtonClick","currentTarget","splice","_getBody","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnDeleteData","companyName","fnViewMenuRequest","name","title","photo","closeNotify","setInterval","clearInterval","OPLoader","OPNotification","nameProps","titleProps","photoProps","bool","menuDetial","OPTextBox","ctl_Attribute","OPButton"],"sourceRoot":""}