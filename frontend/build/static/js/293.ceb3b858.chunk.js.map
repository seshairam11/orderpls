{"version":3,"file":"static/js/293.ceb3b858.chunk.js","mappings":"4HAEO,MAAMA,EAAgBA,KAC3B,OAAO,SAA0BC,GAE/B,IAAyC,IAArCA,EAAcC,SAASC,UAAoB,CAC7C,IAAIC,EA4MR,SAAwBH,GACtB,IAAII,EAAY,CAAC,EACgB,KAA7BJ,EAAcK,YAChBD,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,0BACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YACD,KAA3BX,EAAcY,UACvBR,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,oBACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,aAGrCP,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,GACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,OAAOP,CACT,CAhOkBS,CAAeb,GAC7B,IAA2B,IAAvBG,EAAQO,WACV,OAAOP,CAEX,CAEA,OAGF,SAA+BH,GAC7B,IAAII,EAAY,CAAC,EACjB,GAAgC,IAA5BJ,EAAcK,WAChB,OAAQL,EAAcC,SAASa,UAC7B,IAAK,QAEmB,OADFC,EAAcf,EAAcK,cAE9CD,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,iCACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,UACH,IAAIK,EAAgBC,EAAgBjB,EAAcK,YAC9Ca,EAoIZ,SAA2BC,GACzB,IAAIC,GAAQ,EACM,KAAdD,IACFC,GAAQ,GAEV,OAAOA,CACT,CA1IgCC,CAAkBrB,EAAcY,WAClC,IAAlBI,GACFZ,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,2BACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,aACN,IAAtBO,IACTd,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,gCACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,WAEqB,KAkKNW,EAnKqBtB,EAAcK,YAoKnDkB,MAAMC,WAAWF,KAAYG,SAASH,MAlKtClB,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,6BACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,WAEqB,IAqIhC,SAA2Be,GACzB,OALqBC,EAKHD,EAJE,QACDE,KAAKD,GAIfV,EAAgBS,KAChBX,EAAcW,MAEdG,EAAiBH,GAT5B,IAAuBC,CAevB,CAjJ8BG,CAAkB9B,EAAcK,cAEpDD,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,wBACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,YAEoB,KAuFLoB,EAxFoB/B,EAAcK,WAyFlD,WACCuB,KAAKG,MAxFN3B,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,oBACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,SAEmB,KAkFPqB,EAnFmBhC,EAAcK,WAoF9C,gBACCuB,KAAKI,MAnFN5B,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,8BACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,gBAE0B,KA6EPsB,EA9E0BjC,EAAcK,WA+E5D,mBACCuB,KAAKK,MA9EN7B,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,kCACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,YAEsB,IA+EjC,SAA0BuB,GACxB,IAAId,GAAQ,EACK,KAAbc,IACFd,GAAQ,GAEV,OAAOA,CACT,CAtF+Be,CAAiBnC,EAAcK,cAEpDD,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,oBACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,YAEsB,IADFkB,EAAiB7B,EAAcK,cAEpDD,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,iCACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MAEF,IAAK,aAEmB,KA+BHyB,EAhCmBpC,EAAcK,WAiClD,UACCuB,KAAKQ,MAhCNhC,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,mBACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,IAAK,aAEwB,IAiFnC,SAA2B0B,GACzB,IAAIC,EAAaD,EAAUE,aAAaC,QAAOC,GAAQA,EAAKC,UAAYL,EAAUhC,aAC9Ee,GAAQ,EACc,IAAtBkB,EAAWK,SACbvB,GAAQ,GAEV,OAAOA,CACT,CAzFiCwB,CAAkB5C,KAEzCI,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,cACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,YAEvC,MACF,QACEP,EAAUE,UAAYN,EAAcO,SAASC,GAC7CJ,EAAUK,OAAS,GACnBL,EAAUM,YAAa,EACvBN,EAAUO,WAAaX,EAAcW,WAW7C,IAA2ByB,EAkB3B,IAA8BH,EAJ9B,IAAuBD,EAJvB,IAA0BD,EAyD1B,IAA0BT,EA1ExB,OAAOlB,CACT,CA1HSyC,CAAsB7C,EAC/B,EA2HA,SAASiB,EAAgB6B,GAEvB,MADQ,WACClB,KAAKkB,EAChB,CAMA,SAASjB,EAAiBkB,GAExB,MADQ,qBACCnB,KAAKmB,EAChB,CA4BA,SAAShC,EAAciC,GACrB,OAAOA,EACJC,cACAC,MACC,yJAEN,CAgDA,C,uDCnOK,MAAMC,EAAgBC,IAA6D,IAA5D,aAAEC,EAAY,aAAEC,EAAY,uBAAEC,GAAwBH,EAChF,OACII,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UAC/CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,MAAKC,SACdJ,EAAaK,KAAI,CAAClB,EAAMmB,IAEjBnB,EAAKoB,aACDL,EAAAA,EAAAA,KAAA,MACIC,UAAU,2DAA2DK,MAAO,CAAEC,QAAS,QAASL,UAEhGM,EAAAA,EAAAA,MAAA,UAAQP,UAAU,iBAAiBQ,QAAUC,IAAQX,EAAuBF,EAAcO,EAAM,EAAGF,SAAA,EAC/FF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAChCF,EAAAA,EAAAA,KAAA,KAAGM,MAAO,CAAEK,MAAO,WAAYT,SAAEjB,EAAK2B,eAE1CJ,EAAAA,EAAAA,MAAA,OAAKP,UAAU,wBAAuBC,SAAA,EAClCM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,SAASK,MAAO,CAAEO,IAAK,OAAQX,SAAA,CACzB,SAAhBjB,EAAK6B,SACFN,EAAAA,EAAAA,MAAA,QAAMP,UAAU,sBAAqBC,SAAA,CAChCjB,EAAK8B,UACNf,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAoBK,MAAO,CAAEK,MAAO,UAAWK,SAAU,WAAgB,OAG7E,SAAhB/B,EAAK6B,SACFN,EAAAA,EAAAA,MAAA,QAAMP,UAAU,sBAAqBC,SAAA,CAChCjB,EAAK8B,UACNf,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oBAAoBK,MAAO,CAAEK,MAAO,UAAWK,SAAU,WAAgB,QAG9FR,EAAAA,EAAAA,MAAA,QAAMP,UAAU,qBAAoBC,SAAA,CACf,SAAhBjB,EAAK6B,QACFG,MAAMC,KAAK,CAAE/B,OAAQF,EAAK8B,WAAYZ,KAAI,CAACgB,EAAGf,KAC1CJ,EAAAA,EAAAA,KAAA,KAAeC,UAAU,iCAAiCK,MAAO,CAAEK,MAAO,UAAWK,SAAU,UAAvFZ,KAEC,SAAhBnB,EAAK6B,QACFG,MAAMC,KAAK,CAAE/B,OAAQF,EAAK8B,WAAYZ,KAAI,CAACgB,EAAGf,KAC1CJ,EAAAA,EAAAA,KAAA,KAAeC,UAAU,qBAAqBK,MAAO,CAAEK,MAAO,UAAWK,SAAU,UAA3EZ,YAIxBI,EAAAA,EAAAA,MAAA,OAAAN,SAAA,CACqB,SAAhBjB,EAAK6B,SACFN,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4CAA8C,aAIlD,YAAhBhB,EAAK6B,SACFN,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAA0C,gBAI9C,UAAhBhB,EAAK6B,SACFN,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sCAAwC,cAI5C,YAAhBhB,EAAK6B,SACFN,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAAkD,gBAItD,cAAhBhB,EAAK6B,SACFN,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIF,EAAAA,EAAAA,KAAA,KAAGqB,MAAM,2CAA6C,4BA3DrEjB,QAwEvB,C,qFC7EP,MAAMkB,EAAmB1B,IAAkC,IAAjC,cAAE2B,EAAa,SAAEC,GAAU5B,EAE1D,MAAO6B,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,IACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GACvCG,GAAUC,EAAAA,EAAAA,QAAO,IAEjBtF,GAAWF,EAAAA,EAAAA,KAajB,SAASyF,EAAkBtB,GACzBa,EAAc1E,WAAa6D,EAAEuB,OAAOC,MACpCX,EAAcY,QAAQC,cAAe,EACrCb,EAAcc,MAAMC,WAAY,EAChCZ,GAAeD,EACjB,CAkBA,OAjCAc,EAAAA,EAAAA,YAAU,KACRhB,EAAcY,QAAQK,QAAQC,OAAO,GACpC,KAgCDzC,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAlB,UACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kBAAiBC,SAAA,EAC9BM,EAAAA,EAAAA,MAAA,SAAOkC,QAASnB,EAAcxE,SAASC,GAAIiD,UAAU,kBAAiBC,SAAA,CAAEqB,EAAcxE,SAAS4F,UAAWpB,EAAc9E,SAASC,WAAasD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,UAAkB,SAC9LF,EAAAA,EAAAA,KAAA,SACE4C,IAAMC,IACJtB,EAAcY,QAAQK,QAAUK,EAChCtB,EAAcY,QAAQG,UAAYO,CAAE,EAEtC5C,UAAW,GAAGsB,EAAcxE,SAAS+F,aAAavB,EAAcc,MAAMC,UAAY,aAAe,KACjGS,KAAK,OACL,uBAAsBxB,EAAcc,MAAMC,UAAYf,EAAcc,MAAMW,SAAWzB,EAAcxE,SAASkG,SAC5G,kBAAiB1B,EAAcxE,SAASC,GACxC,qBAAoBuE,EAAcY,QAAQe,MAC1C,0BAAyB3B,EAAcY,QAAQW,UAC/CK,SAAU5B,EAAcxE,SAASqG,SACjCpG,GAAIuE,EAAcxE,SAASC,GAC3BqG,SAAU9B,EAAcxE,SAASqG,SACjCE,UAAW/B,EAAcxE,SAASoC,OAClCoE,QAjDV,SAAuB7C,GACrBA,EAAEuB,OAAOuB,kBAAkB,IAC3BjC,EAAcY,QAAQC,cAAe,EACrCN,EAAQ2B,QAAUlC,EAAcxC,aAAaC,QAAOC,GAAQyE,OAAOzE,EAAKC,SAASO,cAAckE,WAAWD,OAAOhD,EAAEuB,OAAOC,OAAOzC,iBACjIoC,GAAc,EAChB,EA6CU+B,OAhCV,SAAsBlD,GACpBa,EAAc1E,WAAa6D,EAAEuB,OAAOC,MACpCX,EAAcY,QAAQC,cAAe,EACrC,IAAIyB,EAAMpH,EAAS8E,GACG,GAAlBsC,EAAI3G,aACNqE,EAAcc,MAAMW,SAAWa,EAAI5G,OACnCsE,EAAcc,MAAMC,WAAY,EAChC5B,EAAEuB,OAAOuB,kBAAkBK,EAAI5G,SAEjC4E,GAAc,EAChB,EAuBUK,MAAOX,EAAc1E,WACrBiH,SAxCV,SAAwBpD,GACtBa,EAAcc,MAAMC,WAAY,EAChCf,EAAc1E,WAAa6D,EAAEuB,OAAOC,MACpCJ,EAAQ2B,QAAUlC,EAAcxC,aAAaC,QAAOC,GAAQyE,OAAOzE,EAAKC,SAASO,cAAcsE,SAASL,OAAOhD,EAAEuB,OAAOC,OAAOzC,iBAC/HiC,GAAeD,EACjB,EAoCUuC,aAAa,SAGfhE,EAAAA,EAAAA,KAACiE,EAAAA,GAAO,CAACjH,GAAIuE,EAAcxE,SAASC,GAAIkH,OAAQ3C,EAAcY,QAAQC,eACrER,IACC5B,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iCAAgCC,SAC3C4B,EAAQ2B,QAAQtD,KAAIlB,IAEjBuB,EAAAA,EAAAA,MAAA,UAEEP,UAAU,iCACVkE,YAAanC,EACbE,MAAOjD,EAAKC,QAAQgB,SAAA,CACrB,OAAOjB,EAAKC,UAJND,EAAKmF,SAMbC,MAAM,EAAG,WAMnB,C,oFCvFA,MAAMC,EAAY1E,IAAkC,IAAjC,cAAE2B,EAAa,SAAEC,GAAU5B,EAEjD,MAAO6B,EAAYC,IAAiBC,EAAAA,EAAAA,WAAS,GACvClF,GAAWF,EAAAA,EAAAA,MACjBgG,EAAAA,EAAAA,YAAU,QAAW,CAACf,IA0BtB,OACIhB,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIM,EAAAA,EAAAA,MAAA,SAAOkC,QAASnB,EAAcxE,SAASC,GAAIiD,UAAU,kBAAiBC,SAAA,CAAEqB,EAAcxE,SAAS4F,UAAWpB,EAAc9E,SAASC,WAAasD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,UAAkB,SAC9LF,EAAAA,EAAAA,KAAA,SACI4C,IAAMC,IACFtB,EAAcY,QAAQK,QAAUK,EAChCtB,EAAcY,QAAQG,UAAYO,CAAE,EAExC5C,UAAW,GAAGsB,EAAcxE,SAAS+F,aAAavB,EAAcc,MAAMC,UAAY,aAAe,KACjGS,KAAK,OACL,uBAAsBxB,EAAcc,MAAMC,UAAYf,EAAcc,MAAMW,SAAWzB,EAAcxE,SAASkG,SAC5G,kBAAiB1B,EAAcxE,SAASC,GACxC,qBAAoBuE,EAAcY,QAAQe,MAC1C,0BAAyB3B,EAAcY,QAAQW,UAC/CK,SAAU5B,EAAcxE,SAASqG,SACjCpG,GAAIuE,EAAcxE,SAASC,GAC3BqG,SAAU9B,EAAcxE,SAASqG,SACjCE,UAAW/B,EAAcxE,SAASoC,OAClCyE,OA9BZ,SAAsBlD,GAClBa,EAAc1E,WAAa6D,EAAE6D,cAAcrC,MAC3CX,EAAcY,QAAQC,cAAe,EACrC,IAAIyB,EAAMpH,EAAS8E,GACG,GAAlBsC,EAAI3G,aACJqE,EAAcc,MAAMW,SAAWa,EAAI5G,OACnCsE,EAAcc,MAAMC,WAAY,EAChC5B,EAAE6D,cAAcf,kBAAkBK,EAAI5G,SAE1CyE,GAAeD,EACnB,EAqBY8B,QA3CW7C,IACnBA,EAAE6D,cAAcf,kBAAkB,IAClCjC,EAAcY,QAAQC,cAAe,EACrCV,GAAeD,EAAW,EAyClBS,MAAOX,EAAc1E,WACrBiH,SAvCYpD,IACpBa,EAAcc,MAAMC,WAAY,EAChCf,EAAc1E,WAAa6D,EAAE6D,cAAcrC,MAC3CR,GAAeD,EAAW,EAqClBuC,aAAa,SAGjBhE,EAAAA,EAAAA,KAACiE,EAAAA,GAAO,CAACjH,GAAIuE,EAAcxE,SAASC,GAAIkH,OAAQ3C,EAAcY,QAAQC,iBACvE,C,qFCxDJ,MAAMoC,EAAkB5E,IAUJ,IAVK,UAC5B6E,EAAS,aACTC,EAAY,cACZC,EAAa,YACbC,EAAW,UACXC,EAAS,mBACTC,EAAkB,uBAClBC,EAAsB,WACtBC,EAAU,cACVC,EAAa,eACbC,GAAiBtF,EACjB,MAAOuF,EAAWC,IAAgBzD,EAAAA,EAAAA,UAAS,MACrC0D,GAAgBtD,EAAAA,EAAAA,QAAO,IACvBuD,GAAkBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASC,aAuB9D,SAASC,IACLP,EAAa,KACjB,CAKA,OA5BA7C,EAAAA,EAAAA,YAAU,MAEV,WACI,GAAkB,OAAd4C,EAAoB,CACpB,MAAMS,EAAaP,EAAc5B,QAAQ0B,GAAWU,OAAOC,wBACrDC,EAAUC,SAASC,eAAe,UAAUd,KAAaW,wBAGzDI,EAFaC,OAAOC,YAEMR,EAAWS,OACrCC,EAAYjB,EAAc5B,QAAQ0B,GAAWmB,UAC/CA,IACIJ,EAAaH,EAAQQ,OAErBD,EAAUhG,MAAMkG,IAAM,IAAIT,EAAQQ,WAElCD,EAAUhG,MAAMkG,IAAM,OAGlC,CACJ,CAnBkBC,EAAoB,GAAI,CAACtB,KA4BnCnF,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAlB,UACJF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BACXK,MAAO,CAAEoG,UAAW,WACpB1J,GAAG,YAAWkD,UACdM,EAAAA,EAAAA,MAAA,SAAOP,UAAU,4BAA2BC,SAAA,EACxCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SACK0E,EAAYzE,KAAIlB,IACLe,EAAAA,EAAAA,KAAA,MAAIC,UAAU,UAGlBK,MAAO,CAAEqG,MAAQ1H,EAAK2H,SAAW1G,SAEhCjB,EAAK4H,QAHD5H,EAAK6H,mBAQ1B9G,EAAAA,EAAAA,KAAA,SAAAE,SACK2E,EAAU1E,KAAI,CAAClB,EAAMmB,IAEdnB,EAAK8H,UACDvG,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CACKjB,EAAK+H,YAAY7G,KAAI,CAAC8G,EAAOC,KAClB1G,EAAAA,EAAAA,MAAA,MAAAN,SAAA,CACQ,IAAXgH,IACGlH,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAlB,SACK+G,EAAME,UAGH,IAAXD,IACGlH,EAAAA,EAAAA,KAAA,QAAMC,UAAW,UAA0B,OAAjBgH,EAAME,QAAmB,aAAiC,YAAlBF,EAAME,QAAwB,aAAiC,eAAlBF,EAAME,QAA2B,eAAmC,cAAlBF,EAAME,QAA0B,UAAY,IAAKjH,UAC9MF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SACxB+G,EAAME,cATNF,EAAMG,SAeE,WAA5B9B,EAAgB+B,UAAwB3C,EAAa4C,YAActH,EAAAA,EAAAA,KAAA,MAAAE,UAChEM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,UACIC,UAAU,cACVjD,GAAI,SAASoD,IACbE,MAAO,CAAEiH,SAAU,YACnB3E,IAAMC,IAASwC,EAAc5B,QAAQrD,GAAS,CAAEyF,OAAQhD,EAAI,EAC5DpC,QAASA,MAnDzD,SAAuBL,GACnBgF,EAAahF,EACjB,CAiDiEoH,CAAcpH,EAAM,EACrCwD,OAAQ+B,EAAazF,UAErBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAEhBkF,IAAc/E,IACXI,EAAAA,EAAAA,MAAA,MAAIF,MAAO,CAAEiH,SAAU,WAAYE,OAAQ,IAAMC,MAAO,QACpD9E,IAAMC,GAAQwC,EAAc5B,QAAQrD,GAAOkG,UAAYzD,EACvD7F,GAAI,UAAUoD,IACdH,UAAU,0CAAyCC,SAAA,CAClDwE,EAAaiD,aACVnH,EAAAA,EAAAA,MAAA,MACIP,UAAU,gBACVK,MACK,CAAC,MAAO,WAAWyD,SAAS9E,EAAK+H,YAAY,GAAGG,SAE3C,CAAC,EADD,CAAES,OAAQ,cAAeC,QAAS,MAAOC,gBAAiB,WAGpE9K,GAAIiC,EAAK8I,MACT5D,YAAczD,IACN,CAAC,MAAO,WAAWqD,SAAS9E,EAAK+H,YAAY,GAAGG,WAChDpC,EAAuBN,EAAWrE,EAAOnB,EAAK+I,QAAS,GACvD5C,EAAa,MACjB,EACFlF,SAAA,EAEFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yBAA2B,cAG/CyE,EAAauD,eACVzH,EAAAA,EAAAA,MAAA,MACIP,UAAU,gBACVK,MACK,CAAC,MAAO,WAAWyD,SAAS9E,EAAK+H,YAAY,GAAGG,SAE3C,CAAC,EADD,CAAES,OAAQ,cAAeC,QAAS,MAAOC,gBAAiB,WAGpE9K,GAAIiC,EAAK8I,MACT5D,YAAczD,IACN,CAAC,MAAO,WAAWqD,SAAS9E,EAAK+H,YAAY,GAAGG,WAChDpC,EAAuBN,EAAWrE,EAAOnB,EAAK+I,QAAS,GACvD5C,EAAa,MACjB,EACFlF,SAAA,EACFF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA8B,0BApE9D,QAAQG,iBAiF9C,C,+KC7IA,MAAM8H,EAA0BA,KACnC,MAAOC,EAAaC,IAAkBzG,EAAAA,EAAAA,WAAS,IACxC0G,EAAaC,IAAkB3G,EAAAA,EAAAA,WAAS,IACxC4G,EAASC,IAAc7G,EAAAA,EAAAA,WAAS,IAChC8G,EAAUC,IAAe/G,EAAAA,EAAAA,WAAS,IAClCH,EAAUmH,IAAehH,EAAAA,EAAAA,WAAS,GAEnCiH,GAAe7G,EAAAA,EAAAA,QAAO,IACtB8G,GAAW9G,EAAAA,EAAAA,QAAO,CAAC,GACnB+G,GAAW/G,EAAAA,EAAAA,QAAO,IAClBgH,GAAgBhH,EAAAA,EAAAA,QAAO,IAGvBiH,GAAYjH,EAAAA,EAAAA,QAAO,MACnBtF,GAAWF,EAAAA,EAAAA,KACX+I,GAAkBC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,SAASC,aAE9D,SAASuD,EAAYC,GAMjB,IAAIC,EAAW,CACX,CAEIhM,WAAY,EACZJ,SAAU,CACN4F,UAAW,OACXG,UAAW,eACX9F,GAAI,WACJmC,OAAQ,GACRiE,UAAU,EACVH,SAAU,oBAEdpG,WAAY,GACZsF,QAAS,CACLe,MAAO,QACPJ,UAAW,gBACXN,QAAS,GACTF,UAAW,GACXF,cAAc,GAElB3F,SAAU,CACNC,WAAW,EACXY,SAAU,aAEd+E,MAAO,CACHC,WAAW,EACXU,SAAU,0BAEdjE,aAjCSmK,EAAaE,SAASjJ,KAAKlB,IAAI,CAC5CmF,MAAOnF,EAAKoK,IACZnK,QAASD,EAAKqK,cAiCd,CAEInM,WAAY,EACZJ,SAAU,CACN4F,UAAW,MACXG,UAAW,eACX9F,GAAI,UACJmC,OAAQ,EACRiE,UAAU,EACVH,SAAU,uBAEdpG,WAAY,GACZsF,QAAS,CACLe,MAAO,SACPJ,UAAW,gBACXN,QAAS,GACTF,UAAW,GACXF,cAAc,GAElB3F,SAAU,CACNC,WAAW,EACXY,SAAU,WAEd+E,MAAO,CACHC,WAAW,EACXU,SAAU,2BAGlB,CAEI7F,WAAY,EACZJ,SAAU,CACN4F,UAAW,GACXG,UAAW,YACX9F,GAAI,kBACJuM,KAAM,YAGd,CAEIpM,WAAY,EACZJ,SAAU,CACN4F,UAAW,SACXG,UAAW,qBACX9F,GAAI,sBAGZ,CAEIG,WAAY,EACZJ,SAAU,CACN4F,UAAW,UACXG,UAAW,iBACX9F,GAAI,uBAGZ,CAEIG,WAAY,EACZJ,SAAU,CACN4F,UAAW,GACXG,UAAW,6GACX9F,GAAI,YACJuM,KAAM,YAGd,CAEIpM,WAAY,EACZJ,SAAU,CACN4F,UAAW,YACXG,UAAW,oBACX9F,GAAI,eACJuM,KAAM,8BAGd,CAEIpM,WAAY,EACZJ,SAAU,CACN4F,UAAW,QACXG,UAAW,kBACX9F,GAAI,aAGZ,CAEIG,WAAY,EACZJ,SAAU,CACN4F,UAAW,SACXG,UAAW,qBACX9F,GAAI,gBAIhB4L,EAAanF,QAAU0F,EACvBK,EAAcN,EAAaO,YAoB/B,WACI,IAAIC,EAAa,CACbjF,UAAW,gBACXkF,YAAa,KACbC,YAAa,KACbC,WAAY,KACZnF,aAAc,CACV4C,WAAW,EACXwC,WAAW,EACXnC,YAAY,EACZM,cAAc,GAElBtD,cAAe,CACXoF,gBAAgB,EAChBC,YAAY,GAEhBpF,YAAa,CACT,CACIkC,WAAY,EACZD,OAAQ,SACRD,QAAS,QACTqD,WAAY,OACZC,WAAY,SAEhB,CACIpD,WAAY,EACZD,OAAQ,MACRD,QAAS,QACTqD,WAAY,OACZC,WAAY,SAEhB,CACIpD,WAAY,EACZD,OAAQ,MACRD,QAAS,QACTqD,WAAY,OACZC,WAAY,SAEhB,CACIpD,WAAY,EACZD,OAAQ,UACRD,QAAS,OACTqD,WAAY,OACZC,WAAY,UAGpBrF,UAAW,IAEfiE,EAASrF,QAAUiG,CACvB,CApEIS,GACA/B,GAAe,GACfE,GAAe,EACnB,CACA,SAASkB,EAAcY,GACnBrB,EAActF,QAAU2G,EACxBC,QAAQC,IAAIF,GAIZ,IAAIG,EAAU,CACVC,aAAc,YACdC,qBAAsB,KACtBC,aANaN,EACZpL,QAAO2L,GAAqB,WAAdA,EAAI7J,QAAqC,WAAd6J,EAAI7J,UAOlD+H,EAASpF,QAAU8G,CAEvB,CAkJA,SAASK,EAAkBlK,GACvB,IAAImK,EAASnK,EAAE6D,cAAcvH,GAG7B,OAFAqN,QAAQC,IAAIO,GAEJA,GACJ,IAAK,eACD/B,EAASrF,QAAQqH,YAAc,EAC/BhC,EAASrF,QAAQoG,WAAa,KAC9BnB,GAAY,GACZ,MACJ,IAAK,YACL,IAAK,UACL,IAAK,aACD1C,SAAS+E,KAAKzK,MAAQ,GACtBkI,GAAW,GACX,MACJ,IAAK,YAzCb,WACI,MAAMwC,EAAQlC,EAASrF,QAAQkG,YACzBsB,EAAanC,EAASrF,QAAQoB,UAAU1E,KAAIlB,IAAI,CAClD8H,QAAS9H,EAAK8H,QACdC,YAAa,CACT,CACII,MAAO,EACPD,QAASlI,EAAK+H,YAAY,GAAGG,SAEjC,CACIC,MAAO,EACPD,QAASlI,EAAK+H,YAAY,GAAGG,SAEjC,CACIC,MAAO,EACPD,QAAyC,eAAhClI,EAAK+H,YAAY,GAAGG,SAA4D,QAAhClI,EAAK+H,YAAY,GAAGG,QAAoB,aAAe,kBAItH+D,EAAc5F,EAAgB4F,YACpClC,EAAUvF,QAAQ0H,KAAK,8BAA+BH,EAAOC,EAAYC,GAEzElF,SAAS+E,KAAKzK,MAAQ,GACtBkI,GAAW,EACf,CAkBY4C,GACA,MACJ,IAAK,kBACL,IAAK,oBACDxC,EAAanF,QAAQ,GAAG5G,WAAa,GACrC+L,EAAanF,QAAQ,GAAGpB,MAAMC,WAAY,EAC1CsG,EAAanF,QAAQ,GAAG5G,WAAa,GACrC+L,EAAanF,QAAQ,GAAGpB,MAAMC,WAAY,EAC1CoG,GAAY,GACZ,MACJ,IAAK,sBA5Gb,WACI,IAAI2C,GAAgB,EAChBxH,EAAM,GACNyH,EAAa,GACjBzH,EAAI0H,KAAK9O,EAASmM,EAAanF,QAAQ,KACvCI,EAAI0H,KAAK9O,EAASmM,EAAanF,QAAQ,KAEvC,IAAK,IAAI+H,EAAI,EAAGA,EAAI3H,EAAI1E,OAAQqM,KACF,IAAtB3H,EAAI2H,GAAGtO,aACPmO,GAAgB,EAChBzC,EAAanF,QAAQI,EAAI2H,GAAGrO,YAAYkF,MAAMC,WAAY,EAC1DgJ,EAAWC,KAAK1H,EAAI2H,KAG5B,IAAsB,IAAlBH,EACAzC,EAAanF,QAAQ6H,EAAWA,EAAWnM,OAAS,GAAGhC,YAAYgF,QAAQC,cAAe,EAC1FwG,EAAanF,QAAQ6H,EAAWA,EAAWnM,OAAS,GAAGhC,YAAYgF,QAAQK,QAAQC,QACnFkG,GAAanH,OAEZ,CACD,IAAIiK,EAAgB,CAChB,CACIrE,MAAO,EACPD,QAASyB,EAAanF,QAAQ,GAAG5G,YAErC,CACIuK,MAAO,EACPD,QAASyB,EAAanF,QAAQ,GAAG5G,aAGzC,GAAqC,IAAjCiM,EAASrF,QAAQqH,YAAmB,CACpC,IAAIY,EAAoB,CACpB,CACItE,MAAO,EACPD,QAAS,QAGjB2B,EAASrF,QAAQoB,UAAU0G,KAAK,CAC5BxE,SAAS,EACTiB,QAAS,EACThB,YAAayE,EAAcE,OAAOD,IAE1C,MAAO,GAAqC,IAAjC5C,EAASrF,QAAQqH,YAAmB,CAC3C,IAAIY,EAAoB5C,EAASrF,QAAQoB,UAAUiE,EAASrF,QAAQoG,YAAY7C,YAAY,GACxF4E,EAAc,CACd7E,SAAS,EACTiB,QAAS,EACThB,YAAayE,EAAcE,OAAOD,IAEtC5C,EAASrF,QAAQoB,UAAUgH,OAAO/C,EAASrF,QAAQoG,WAAY,EAAG+B,EACtE,CACAhD,EAAanF,QAAQ,GAAG5G,WAAa,GACrC+L,EAAanF,QAAQ,GAAG5G,WAAa,GACrC6L,GAAY,EAChB,CACJ,CAsDYoD,GAGZ,CA0DA,OAjCAvJ,EAAAA,EAAAA,YAAU,KAINyG,EAAUvF,SAAUsI,EAAAA,EAAAA,IAzWN,iCA4Wd/C,EAAUvF,QAAQ0H,KAAK,4BAA6B7F,EAAgB4F,aAGpElC,EAAUvF,QAAQuI,GAAG,6BAA8B9C,IAC/CD,EAAYC,EAAa,IAG7BF,EAAUvF,QAAQuI,GAAG,mBAAmB,CAAChB,EAAOC,EAAYnK,KACxD,MAAMV,EAAQ2I,EAActF,QAAQwI,WAAUhN,GAAQA,EAAKoK,MAAQ2B,IAC7DkB,EAASnD,EAActF,QAAQzE,QAAOC,GAAQA,EAAKoK,MAAQ2B,IACjEkB,EAAO,GAAGpL,OAASA,EACnBoL,EAAO,GAAGC,WAAalB,EACRlC,EAActF,QAAQoI,OAAOzL,EAAO,EAAG8L,EAAO,IAC7D1C,EAAcT,EAActF,SAC5BkF,GAAYyD,IAAiBA,GAAa,IAKvC,KACCpD,EAAUvF,SACVuF,EAAUvF,QAAQ4I,YACtB,IAEL,KAGC7L,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,CACKmI,IAAgBrI,EAAAA,EAAAA,KAACsM,EAAAA,EAAQ,IACzBnE,IACG3H,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UACzBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACpBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,YAAWC,SAAA,EACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,UACxBM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yBAAwBC,SAAA,EACnCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,qBAI/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAK3BD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,YAAYjD,GAAG,YAAWkD,SAAA,EACrCM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,0BAAyBC,SAAA,EACpCF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mBAAkBC,SAAC,aAGjCF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,0DAEPF,EAAAA,EAAAA,KAACL,EAAAA,EAAa,CACVE,aAAcgJ,EAASpF,QAAQ+G,aAC/B1K,aAAc+I,EAASpF,QAAQiH,aAC/B3K,uBA5FpD,SAAgCF,EAAcO,GAI1C,GAHAiK,QAAQC,IAAIzK,GACZwK,QAAQC,IAAIlK,GAGH,cADDP,EACJ,CACImG,SAAS+E,KAAKzK,MAAMiM,SAAW,SAC/B,MAAMC,EAAaC,gBAAgB5D,EAASpF,QAAQiH,aAAatK,GAAO+L,YACxEtD,EAASpF,QAAQgH,qBAAuB5B,EAASpF,QAAQiH,aAAatK,GAAOQ,UAC7EkI,EAASrF,QAAQkG,YAAcd,EAASpF,QAAQiH,aAAatK,GAAOiJ,IACpEP,EAASrF,QAAQoB,UAAY2H,CACxB,CAEbhE,GAAW,EACf,uBAwFgBxI,EAAAA,EAAAA,KAAA,OAAKC,UAAW,4CAA4CsI,EAAU,OAAS,UAAYrI,SACtFqI,IACG/H,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAlB,SAAA,EACIM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iCAAgCC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MAAAE,SAAK2I,EAASpF,QAAQgH,wBACtBzK,EAAAA,EAAAA,KAAC0M,EAAAA,EAAQ,CACLnL,cAAeqH,EAAanF,QAAQ,GACpCmH,kBAAmBA,QAG3BpK,EAAAA,EAAAA,MAAA,OAAKP,UAAU,iBAAgBC,SAAA,EAC3BM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,yDAAwDC,SAAA,EACnEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAQ,CACLnL,cAAeqH,EAAanF,QAAQ,GACpCmH,kBAAmBA,QAG3B5K,EAAAA,EAAAA,KAACwE,EAAAA,EAAe,CACZC,UAAWqE,EAASrF,QAAQgB,UAC5BC,aAAcoE,EAASrF,QAAQiB,aAC/BC,cAAemE,EAASrF,QAAQkB,cAChCC,YAAakE,EAASrF,QAAQmB,YAC9BC,UAAWiE,EAASrF,QAAQoB,UAC5BE,uBA/GpC,SAAgCN,EAAWrE,EAAO4H,EAAS2E,GACvD,GACS,kBADDlI,GA9IZ,SAA0BrE,EAAO4H,EAAS2E,GACtC,GAAkB,IAAdA,EACA7D,EAASrF,QAAQoB,UAAUgH,OAAOzL,EAAO,GACzCuI,GAAanH,QACV,GAAkB,IAAdmL,EAAiB,CACxB7D,EAASrF,QAAQqH,YAAc,EAC/BhC,EAASrF,QAAQoG,WAAazJ,EAC9B,IAAIwM,EAAS9D,EAASrF,QAAQoB,UAAUzE,GAAO4G,YAC/C4B,EAAanF,QAAQ,GAAG5G,WAAa+P,EAAO,GAAGzF,QAC/CyB,EAAanF,QAAQ,GAAG5G,WAAa+P,EAAO,GAAGzF,QAC/CuB,GAAY,EAChB,CACJ,CAoIYmE,CAAiBzM,EAAO4H,EAAS2E,EAG7C,KA2GgCnM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,kCAAiCC,SAAA,EAC5CF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAQ,CACLnL,cAAeqH,EAAanF,QAAQ,GACpCmH,kBAAmBA,KAEvB5K,EAAAA,EAAAA,KAAC0M,EAAAA,EAAQ,CACLnL,cAAeqH,EAAanF,QAAQ,GACpCmH,kBAAmBA,eAO1CrC,IACGvI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+BAA+BjD,GAAG,UAAUyD,QAASmK,KAExE5K,EAAAA,EAAAA,KAAA,OAAKC,UAAW,4BAA2BwI,EAAW,OAAS,WAAanI,MAAO,CAAEwM,QAASrE,EAAW,QAAU,QAASvI,SACvHuI,IACGzI,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,UAChDM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,gBAAgBK,MAAO,CAAEiG,OAAQ,SAAUrG,SAAA,EACtDM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,eAAcC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,cAAaC,SAAC,kBAC5BF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAQ,CACLnL,cAAeqH,EAAanF,QAAQ,GACpCmH,kBAAmBA,QAG3B5K,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACvBM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,MAAKC,SAAA,EAChBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,KAACsB,EAAAA,EAAgB,CACbC,cAAeqH,EAAanF,QAAQ,GACpCjC,SAAUA,SAItBxB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACjBF,EAAAA,EAAAA,KAACsE,EAAAA,EAAS,CACN/C,cAAeqH,EAAanF,QAAQ,GACpCjC,SAAUA,SAItBxB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAqBK,MAAO,CAAEyM,UAAW,SAAU7M,UAC9DM,EAAAA,EAAAA,MAAA,OAAKP,UAAU,OAAMC,SAAA,EACjBF,EAAAA,EAAAA,KAAC0M,EAAAA,EAAQ,CACLnL,cAAeqH,EAAanF,QAAQ,GACpCmH,kBAAmBA,KAEvB5K,EAAAA,EAAAA,KAAC0M,EAAAA,EAAQ,CACLnL,cAAeqH,EAAanF,QAAQ,GACpCmH,kBAAmBA,0BAahE,C","sources":["CommonOP/OPValidations.js","ComponentOP/OPGroupButton.js","ComponentOP/OPLocalSearchBar.js","ComponentOP/OPTextBox.js","ComponentOP/OPVerticalTable.js","PagesOP/OPSeverOrderProcessing.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport const OPValidations = () => {\r\n  return function validateControls(ctl_attribute) {\r\n\r\n    if (ctl_attribute.validate.mandatory === true) {\r\n      let brewErr = checkMandatory(ctl_attribute);\r\n      if (brewErr.founderror === true) {\r\n        return brewErr;\r\n      }\r\n    }\r\n\r\n    return checkValidateDataType(ctl_attribute);\r\n  };\r\n\r\n  function checkValidateDataType(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue != \"\") {\r\n      switch (ctl_attribute.validate.datatype) {\r\n        case \"email\":\r\n          let retvalidemail = validateEmail(ctl_attribute.inputvalue);\r\n          if (retvalidemail === null) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"No Valid Email address entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"phoneno\":\r\n          let retvalidphone = validatePhoneNo(ctl_attribute.inputvalue);\r\n          let retvalidphonecode = validatePhoneCode(ctl_attribute.inputkey);\r\n          if (retvalidphone === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Phone no entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          } else if (retvalidphonecode === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Phone Code doesn't been empty\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"numeric\":\r\n          let retvalidnumeric = validateIsNumber(ctl_attribute.inputvalue);\r\n          if (retvalidnumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Accepts Only Numeric Field\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"loginid\":\r\n          let retvalidLoginid = validateIsLoginID(ctl_attribute.inputvalue);\r\n          if (retvalidLoginid === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Field entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"aadharno\":\r\n          let retvalidAadhar = validateAadharNo(ctl_attribute.inputvalue);\r\n          if (retvalidAadhar === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Aadhar no\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alpha\":\r\n          let retvalidAlpha = validateAlpha(ctl_attribute.inputvalue);\r\n          if (retvalidAlpha === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only Alphabet\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alphanumeric\":\r\n          let retvalidAlphaNumeric = validateAlphaNumeric(ctl_attribute.inputvalue);\r\n          if (retvalidAlphaNumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only AlphaNumeric\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"dropdown\":\r\n          let retvalidDropDown = validateDropDown(ctl_attribute.inputvalue);\r\n          if (retvalidDropDown === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Selection\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"username\":\r\n          let retvalidUserName = validateUserName(ctl_attribute.inputvalue);\r\n          if (retvalidUserName === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Syntax only (@ and _ )\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n\r\n        case \"hotelcode\":\r\n          let retvalidGOTID = validateHotelCode(ctl_attribute.inputvalue);\r\n          if (retvalidGOTID === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid offer ID\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"searchBox\":\r\n          let retvalidssearchbox = validateSearchBox(ctl_attribute);\r\n          if (retvalidssearchbox === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Not in Menu\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        default:\r\n          brewError.controlid = ctl_attribute.csstheme.id;\r\n          brewError.errmsg = \"\";\r\n          brewError.founderror = false;\r\n          brewError.arrayindex = ctl_attribute.arrayindex;\r\n          break;\r\n      }\r\n    }\r\n    return brewError;\r\n  }\r\n\r\n  function validatePhoneNo(phoneno) {\r\n    let a = /^\\d{10}$/;\r\n    return a.test(phoneno);\r\n  }\r\n  function validateHotelCode(hotelcode) {\r\n    let a = /^\\d{9}$/;\r\n    return a.test(hotelcode);\r\n  }\r\n\r\n  function validateUserName(username) {\r\n    let s = /^[a-zA-Z0-9\\_\\@]+$/;\r\n    return s.test(username)\r\n  }\r\n\r\n  function validateAadharNo(aadharno) {\r\n    let s = /^\\d{12}$/;\r\n    return s.test(aadharno);\r\n  }\r\n  function validateAlpha(alpha) {\r\n    let s = /^[A-Za-z\\ ]+$/;\r\n    return s.test(alpha);\r\n  }\r\n  function validateAlphaNumeric(alphanumeric) {\r\n    let s = /^[0-9a-zA-Z\\ ]+$/;\r\n    return s.test(alphanumeric);\r\n  }\r\n  function validatePhoneCode(phonecode) {\r\n    let _bool = true;\r\n    if (phonecode === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateDropDown(dropdown) {\r\n    let _bool = true;\r\n    if (dropdown === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateEmail(email) {\r\n    return email\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  }\r\n  function isOnlyNumbers(input) {\r\n    const numberRegex = /^\\d+$/;\r\n    return numberRegex.test(input);\r\n  }\r\n  function validateIsLoginID(loginid) {\r\n    if (isOnlyNumbers(loginid)) {\r\n      return validatePhoneNo(loginid);\r\n    }else if(validateEmail(loginid)){\r\n      return true;\r\n    }else if(validateUserName(loginid)){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n\r\n  }\r\n  function validateSearchBox(attribute) {\r\n    let _filterarr = attribute.dropdownlist.filter(item => item.m_value === attribute.inputvalue);\r\n    let _bool = true\r\n    if (_filterarr.length === 0) {\r\n      _bool = false\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateIsNumber(ivalue) {\r\n    return !isNaN(parseFloat(ivalue)) && isFinite(ivalue);\r\n  }\r\n  function checkMandatory(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"This field is mandatory\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    } else if (ctl_attribute.inputkey === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"Invalid Selection\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    else {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"\";\r\n      brewError.founderror = false;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    return brewError;\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport const OPGroupButton = ({ groupBtnName, groupBtnData, handleGroupButtonClick }) => {\r\n    return (\r\n        <div className='tasks-activity tasks collapse show'>\r\n            <ul className='row'>\r\n                {groupBtnData.map((item, index) => {\r\n                    return (\r\n                        item.showbutton && (\r\n                            <li key={index}\r\n                                className='d-flex flex-column col-xxl-2 col-xl-3 col-md-4 col-sm-6 ' style={{ padding: '12px' }}\r\n                            >\r\n                                <button className='grpbtn btn2lnk' onClick={(e) => { handleGroupButtonClick(groupBtnName, index) }}>\r\n                                    <div className='grpbtn-text-content'>\r\n                                        <p style={{ color: \"#595757\" }}>{item.labelname}</p>\r\n                                    </div>\r\n                                    <div className='grpbtn-bottom-content'>\r\n                                        <div className='d-flex' style={{ gap: \"5px\" }} >\r\n                                            {item.status === \"open\" &&\r\n                                                <span className='grpbtn-single-seats'>\r\n                                                    {item.maxseats}\r\n                                                    <i className=\"ti ti-user-filled\" style={{ color: \"#228B22\", fontSize: \"1.2em\" }} ></i> {/* Green icon */}\r\n                                                </span>\r\n                                            }\r\n                                            {item.status !== \"open\" &&\r\n                                                <span className='grpbtn-single-seats'>\r\n                                                    {item.maxseats}\r\n                                                    <i className=\"ti ti-user-filled\" style={{ color: \"#DC143C\", fontSize: \"1.2em\" }} ></i> {/* Red icon */}\r\n                                                </span>\r\n                                            }\r\n                                            <span className='grpbtn-group-seats'>\r\n                                                {item.status === \"open\" &&\r\n                                                    Array.from({ length: item.maxseats }).map((_, index) => (\r\n                                                        <i key={index} className=\"ti ti-user-filled soft-success\" style={{ color: \"#228B22\", fontSize: \"1.2em\" }}></i>\r\n                                                    ))}\r\n                                                {item.status !== \"open\" &&\r\n                                                    Array.from({ length: item.maxseats }).map((_, index) => (\r\n                                                        <i key={index} className=\"ti ti-user-filled \" style={{ color: \"#DC143C\", fontSize: \"1.2em\" }}></i>\r\n                                                    ))}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            {item.status === \"open\" &&\r\n                                                <>\r\n                                                    <i className=\"fa-solid fa-lock-open fa-bounce mr-5-im\"></i>\r\n                                                    Open...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"process\" &&\r\n                                                <>\r\n                                                    <i className=\"fas fa-spinner fa-spin me-2 mr-5-im\"></i>\r\n                                                    Process...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"close\" &&\r\n                                                <>\r\n                                                    <i className=\"fa-solid fa-lock fa-shake mr-5-im\"></i>\r\n                                                    Close...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"waiting\" &&\r\n                                                <>\r\n                                                    <i className=\"fa-solid fa-hourglass-start fa-fade mr-5-im\"></i>\r\n                                                    Waiting...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"completed\" &&\r\n                                                <>\r\n                                                    <i class=\"fa-solid fa-money-bill fa-flip mr-5-im\"></i>\r\n                                                    Completed...\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        )\r\n                    )\r\n                }\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"../assets/css/style.css\"\r\nimport { Tooltip } from 'react-tooltip';\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\n\r\nexport const OPLocalSearchBar = ({ ctl_Attribute, rerender }) => {\r\n\r\n  const [l_rerender, l_setRerender] = useState(false)\r\n  const [isShowList, setIsShowList] = useState(false);\r\n  const fltData = useRef([]);\r\n\r\n  const validate = OPValidations();\r\n\r\n\r\n  useEffect(() => {\r\n    ctl_Attribute.tooltip.isfocus.focus();\r\n  }, []);\r\n\r\n  function handleOnFocus(e) {\r\n    e.target.setCustomValidity(\"\")\r\n    ctl_Attribute.tooltip.isvalidation = true;\r\n    fltData.current = ctl_Attribute.dropdownlist.filter(item => String(item.m_value).toLowerCase().startsWith(String(e.target.value).toLowerCase()))\r\n    setIsShowList(true);\r\n  }\r\n  function handleOnMouseDown(e) {\r\n    ctl_Attribute.inputvalue = e.target.value;\r\n    ctl_Attribute.tooltip.isvalidation = true;\r\n    ctl_Attribute.error.errorshow = false;\r\n    l_setRerender(!l_rerender);\r\n  }\r\n  function handleOnChange(e) {\r\n    ctl_Attribute.error.errorshow = false;\r\n    ctl_Attribute.inputvalue = e.target.value;\r\n    fltData.current = ctl_Attribute.dropdownlist.filter(item => String(item.m_value).toLowerCase().includes(String(e.target.value).toLowerCase()))\r\n    l_setRerender(!l_rerender);\r\n  }\r\n  function handleOnBlur(e) {\r\n    ctl_Attribute.inputvalue = e.target.value;\r\n    ctl_Attribute.tooltip.isvalidation = false;\r\n    let err = validate(ctl_Attribute);\r\n    if (err.founderror == true) {\r\n      ctl_Attribute.error.errormsg = err.errmsg;\r\n      ctl_Attribute.error.errorshow = true;\r\n      e.target.setCustomValidity(err.errmsg);\r\n    }\r\n    setIsShowList(false);\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <div className=\"select2-results\">\r\n          <label htmlFor={ctl_Attribute.csstheme.id} className=\"col-form-label \">{ctl_Attribute.csstheme.labletext}{ctl_Attribute.validate.mandatory ? (<span className=\"text-danger\">&nbsp;*</span>) : null}</label>\r\n          <input\r\n            ref={(el) => {\r\n              ctl_Attribute.tooltip.isfocus = el\r\n              ctl_Attribute.tooltip.errorshow = el\r\n            }}\r\n            className={`${ctl_Attribute.csstheme.classname} ${ctl_Attribute.error.errorshow ? \"err-border\" : \"\"}`}\r\n            type=\"text\"\r\n            data-tooltip-content={ctl_Attribute.error.errorshow ? ctl_Attribute.error.errormsg : ctl_Attribute.csstheme.hinttext}\r\n            data-tooltip-id={ctl_Attribute.csstheme.id}\r\n            data-tooltip-place={ctl_Attribute.tooltip.place}\r\n            data-tooltip-class-name={ctl_Attribute.tooltip.classname}\r\n            readOnly={ctl_Attribute.csstheme.readonly}\r\n            id={ctl_Attribute.csstheme.id}\r\n            disabled={ctl_Attribute.csstheme.readonly}\r\n            maxLength={ctl_Attribute.csstheme.length}\r\n            onFocus={handleOnFocus}\r\n            onBlur={handleOnBlur}\r\n            value={ctl_Attribute.inputvalue}\r\n            onChange={handleOnChange}\r\n            autoComplete=\"off\"\r\n\r\n          />\r\n          <Tooltip id={ctl_Attribute.csstheme.id} isOpen={ctl_Attribute.tooltip.isvalidation} />\r\n          {isShowList && (\r\n            <ul className='pos-absolute wth-77 table-view'>\r\n              {fltData.current.map(item => {\r\n                return (\r\n                  <option\r\n                    key={item.m_key}\r\n                    className='pd-10 popup-toggle list-search'\r\n                    onMouseDown={handleOnMouseDown}\r\n                    value={item.m_value}\r\n                  >&nbsp;{item.m_value}</option>\r\n                )\r\n              }).slice(0, 4)}\r\n            </ul>\r\n          )}\r\n\r\n        </div >\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import \"../assets/plugins/tabler-icons/tabler-icons.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { Tooltip } from \"react-tooltip\";\r\n\r\nexport const OPTextBox = ({ ctl_Attribute, rerender }) => {\r\n\r\n    const [l_rerender, l_setRerender] = useState(false)\r\n    const validate = OPValidations();\r\n    useEffect(() => { }, [rerender]);\r\n\r\n    const handleOnFocus = (e) => {\r\n        e.currentTarget.setCustomValidity(\"\")\r\n        ctl_Attribute.tooltip.isvalidation = true;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    const handleOnChange = (e) => {\r\n        ctl_Attribute.error.errorshow = false;\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    function handleOnBlur(e) {\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        ctl_Attribute.tooltip.isvalidation = false;\r\n        let err = validate(ctl_Attribute);\r\n        if (err.founderror == true) {\r\n            ctl_Attribute.error.errormsg = err.errmsg;\r\n            ctl_Attribute.error.errorshow = true;\r\n            e.currentTarget.setCustomValidity(err.errmsg)\r\n        }\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={ctl_Attribute.csstheme.id} className=\"col-form-label \">{ctl_Attribute.csstheme.labletext}{ctl_Attribute.validate.mandatory ? (<span className=\"text-danger\">&nbsp;*</span>) : null}</label>\r\n            <input\r\n                ref={(el) => {\r\n                    ctl_Attribute.tooltip.isfocus = el\r\n                    ctl_Attribute.tooltip.errorshow = el\r\n                }}\r\n                className={`${ctl_Attribute.csstheme.classname} ${ctl_Attribute.error.errorshow ? \"err-border\" : \"\"}`}\r\n                type=\"text\"\r\n                data-tooltip-content={ctl_Attribute.error.errorshow ? ctl_Attribute.error.errormsg : ctl_Attribute.csstheme.hinttext}\r\n                data-tooltip-id={ctl_Attribute.csstheme.id}\r\n                data-tooltip-place={ctl_Attribute.tooltip.place}\r\n                data-tooltip-class-name={ctl_Attribute.tooltip.classname}\r\n                readOnly={ctl_Attribute.csstheme.readonly}\r\n                id={ctl_Attribute.csstheme.id}\r\n                disabled={ctl_Attribute.csstheme.readonly}\r\n                maxLength={ctl_Attribute.csstheme.length}\r\n                onBlur={handleOnBlur}\r\n                onFocus={handleOnFocus}\r\n                value={ctl_Attribute.inputvalue}\r\n                onChange={handleOnChange}\r\n                autoComplete=\"off\"\r\n            // required={ctl_Attribute.validate.mandatory}\r\n            />\r\n            <Tooltip id={ctl_Attribute.csstheme.id} isOpen={ctl_Attribute.tooltip.isvalidation} />\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"../assets/css/dataTables.bootstrap5.min.css\"\r\nimport \"../index.css\"\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const OPVerticalTable = ({\r\n    tablename,\r\n    actionButton,\r\n    tableMetaData,\r\n    colMetaData,\r\n    tableData,\r\n    handleChangeSearch,\r\n    handleTableActionClick,\r\n    handleSort,\r\n    handleKeyDown,\r\n    isTableChanged, }) => {\r\n    const [openIndex, setOpenIndex] = useState(null);\r\n    const optionBoxRefs = useRef([]);\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n\r\n    useEffect(() => { handleDropDownList() }, [openIndex])\r\n\r\n    function handleDropDownList() {\r\n        if (openIndex !== null) {\r\n            const buttonRect = optionBoxRefs.current[openIndex].button.getBoundingClientRect();\r\n            const lstRect = document.getElementById(`optmenu${openIndex}`).getBoundingClientRect();\r\n            const innerHight = window.innerHeight;\r\n            // Replace with your div's ID          \r\n            const spaceBelow = innerHight - buttonRect.bottom;\r\n            const optionBox = optionBoxRefs.current[openIndex].optionBox;\r\n            if (optionBox) {\r\n                if (spaceBelow < lstRect.height) {\r\n                    // Not enough space below, position above              \r\n                    optionBox.style.top = `-${lstRect.height}px`;\r\n                } else {\r\n                    optionBox.style.top = \"33px\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnBlur() {\r\n        setOpenIndex(null);\r\n    }\r\n    function handleOnFocus(index) {\r\n        setOpenIndex(index);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"row dt-row\">\r\n            <div className=\"col-sm-12 table-responsive\"\r\n                style={{ overflowX: 'visible' }}\r\n                id='orderMenu'>\r\n                <table className='table dataTable no-footer'>\r\n                    <thead className='thead-light'>\r\n                        <tr>\r\n                            {colMetaData.map(item => {\r\n                                return (<th className='sorting'\r\n                                    // data-bs-toggle=\"dropdown\"\r\n                                    key={item.h_colindex}\r\n                                    style={{ width: (item.h_width) }}\r\n                                >\r\n                                    {item.h_name}\r\n                                </th>)\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableData.map((item, index) => {\r\n                            return (\r\n                                item.showrow && (\r\n                                    <tr key={`list ${index}`}>\r\n                                        {item.table_value.map((tdata, tindex) => {\r\n                                            return (<td key={tdata.t_key} >\r\n                                                {tindex !== 2 && (\r\n                                                    <>\r\n                                                        {tdata.t_value}\r\n                                                    </>\r\n                                                )}\r\n                                                {tindex === 2 && (\r\n                                                    <span className={`badge ${tdata.t_value == \"New\" ? \"bg-success\" : tdata.t_value === \"Waiting\" ? \"bg-warning\" : tdata.t_value === \"Processing\" ? \"bg-secondary\" : tdata.t_value === \"Completed\" ? \"bg-info\" : \"\"}`} >\r\n                                                        <span className=\"badge-label\">\r\n                                                            {tdata.t_value}\r\n                                                        </span>\r\n                                                    </span>\r\n                                                )}\r\n                                            </td>)\r\n                                        })}\r\n                                        {getAppStoreData.usertype ===\"server\" && actionButton.hasAction && (<td>\r\n                                            <div className='dropdown table-action '>\r\n                                                <button\r\n                                                    className='action-icon'\r\n                                                    id={`optbtn${index}`}\r\n                                                    style={{ position: 'relative' }}\r\n                                                    ref={(el) => { optionBoxRefs.current[index] = { button: el } }}\r\n                                                    onClick={() => { handleOnFocus(index) }}\r\n                                                    onBlur={handleOnBlur}\r\n                                                >\r\n                                                    <i className='fa fa-ellipsis-v'></i>\r\n                                                </button>\r\n                                                {openIndex === index && (\r\n                                                    <ul style={{ position: 'absolute', zIndex: 1000, right: '45px' }}\r\n                                                        ref={(el) => (optionBoxRefs.current[index].optionBox = el)}\r\n                                                        id={`optmenu${index}`}\r\n                                                        className=' dropdown-menu dropdown-menu-right show'>\r\n                                                        {actionButton.canEditRow && (\r\n                                                            <li\r\n                                                                className='dropdown-item'\r\n                                                                style={\r\n                                                                    ![\"New\", \"Waiting\"].includes(item.table_value[2].t_value)\r\n                                                                        ? { cursor: \"not-allowed\", opacity: \"0.7\", backgroundColor: \"#f0f0f0\" }\r\n                                                                        : {}\r\n                                                                }\r\n                                                                id={item.rowid}\r\n                                                                onMouseDown={(e) => {\r\n                                                                    if ([\"New\", \"Waiting\"].includes(item.table_value[2].t_value)) {\r\n                                                                        handleTableActionClick(tablename, index, item.rowmode, 1);\r\n                                                                        setOpenIndex(null);\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                <i className='ti ti-edit text-blue'></i>\r\n                                                                &nbsp;Edit\r\n                                                            </li>)}\r\n                                                        {actionButton.canDeleteRow && (\r\n                                                            <li\r\n                                                                className='dropdown-item'\r\n                                                                style={\r\n                                                                    ![\"New\", \"Waiting\"].includes(item.table_value[2].t_value)\r\n                                                                        ? { cursor: \"not-allowed\", opacity: \"0.7\", backgroundColor: \"#f0f0f0\" }\r\n                                                                        : {}\r\n                                                                }\r\n                                                                id={item.rowid}\r\n                                                                onMouseDown={(e) => {\r\n                                                                    if ([\"New\", \"Waiting\"].includes(item.table_value[2].t_value)) {\r\n                                                                        handleTableActionClick(tablename, index, item.rowmode, 2);\r\n                                                                        setOpenIndex(null);\r\n                                                                    }\r\n                                                                }}>\r\n                                                                <i className='ti ti-trash text-danger'></i>\r\n                                                                &nbsp;Delete\r\n                                                            </li>)}\r\n                                                    </ul>)}\r\n                                            </div>\r\n                                        </td>)}\r\n                                    </tr>\r\n                                ))\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        </div >\r\n    </>);\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPGroupButton } from '../ComponentOP/OPGroupButton';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { OPLocalSearchBar } from '../ComponentOP/OPLocalSearchBar';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { OPVerticalTable } from '../ComponentOP/OPVerticalTable';\r\nimport { io } from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const OPServerOrderProcessing = () => {\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [sideBar, setSideBar] = useState(false);\r\n    const [addOrder, setAddOrder] = useState(false);\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlBench = useRef({});\r\n    const tbl_menu = useRef([])\r\n    const responce_data = useRef([])\r\n\r\n    const socketUrl = 'https://orderpls.onrender.com'\r\n    const socketRef = useRef(null);\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n\r\n    function initControl(responseData) {\r\n        const MenuList = responseData.menuList.map((item) => ({\r\n            m_key: item._id,\r\n            m_value: item.menuItem\r\n        }))\r\n\r\n        let ctlArray = [\r\n            {\r\n                /*txt: Menu : 0*/\r\n                arrayindex: 0,\r\n                csstheme: {\r\n                    labletext: \"Menu\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_test\",\r\n                    length: 50,\r\n                    readonly: false,\r\n                    hinttext: \"Enter your Order\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"right\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"searchBox\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n                dropdownlist: MenuList,\r\n            },\r\n            {\r\n                /*txt: Quantity : 1*/\r\n                arrayindex: 1,\r\n                csstheme: {\r\n                    labletext: \"Qty\",\r\n                    classname: \"form-control\",\r\n                    id: \"num_qty\",\r\n                    length: 2,\r\n                    readonly: false,\r\n                    hinttext: \"Enter your Quantity\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"numeric\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cross : 2*/\r\n                arrayindex: 2,\r\n                csstheme: {\r\n                    labletext: \"\",\r\n                    classname: \"btn-close\",\r\n                    id: \"btn_crosssearch\",\r\n                    icon: \"ti ti-x\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cancel_delete : 3*/\r\n                arrayindex: 3,\r\n                csstheme: {\r\n                    labletext: \"cancel\",\r\n                    classname: \"btn btn-light me-2\",\r\n                    id: \"btn_cancel_search\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:confirm_search : 4*/\r\n                arrayindex: 4,\r\n                csstheme: {\r\n                    labletext: \"Confirm\",\r\n                    classname: \"btn btn-danger\",\r\n                    id: \"btn_confirm_search\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cross : 5*/\r\n                arrayindex: 5,\r\n                csstheme: {\r\n                    labletext: \"\",\r\n                    classname: \"btn-close custom-btn-close border p-1 me-0 d-flex align-items-center justify-content-center rounded-circle\",\r\n                    id: \"btn_cross\",\r\n                    icon: \"ti ti-x\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:Add Order : 6*/\r\n                arrayindex: 6,\r\n                csstheme: {\r\n                    labletext: \"Add Order\",\r\n                    classname: \"label-add btn2lnk\",\r\n                    id: \"btn_addorder\",\r\n                    icon: \"ti ti-square-rounded-plus\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:Save : 7*/\r\n                arrayindex: 7,\r\n                csstheme: {\r\n                    labletext: \" Save\",\r\n                    classname: \"btn btn-primary\",\r\n                    id: \"btn_save\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cancel : 8*/\r\n                arrayindex: 8,\r\n                csstheme: {\r\n                    labletext: \"Cancel\",\r\n                    classname: \"btn btn-light me-2\",\r\n                    id: \"btn_cancel\",\r\n                },\r\n            },\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n        fnCreateBench(responseData.hotelBench);\r\n        fnBuildMenuList();\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n    function fnCreateBench(l_responceData) {\r\n        responce_data.current = l_responceData;\r\n        console.log(l_responceData);\r\n        const benchlst = l_responceData\r\n            .filter(sts => sts.status == \"process\" || sts.status == \"waiting\");\r\n\r\n        let l_bench = {\r\n            groupbtnname: \"beanchlst\",\r\n            groupbtnselectedname: null,\r\n            groupbtndata: benchlst\r\n        }\r\n        ctlBench.current = l_bench;\r\n\r\n    }\r\n\r\n    function fnBuildMenuList() {\r\n        let l_tbl_menu = {\r\n            tablename: \"tbl_orderlist\",\r\n            grpbtnrowid: null,\r\n            grpbtnindex: null,\r\n            tableindex: null,\r\n            actionButton: {\r\n                hasAction: true,\r\n                hasStatus: true,\r\n                canEditRow: true,\r\n                canDeleteRow: true,\r\n            },\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Orders\",\r\n                    h_width: \"200px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Qty\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Sts\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 3,\r\n                    h_name: \"Actions\",\r\n                    h_width: \"43px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: [],\r\n        };\r\n        tbl_menu.current = l_tbl_menu\r\n    }\r\n    function fnTableOrderList(index, rowmode, rowaction) {\r\n        if (rowaction === 2) {\r\n            tbl_menu.current.tableData.splice(index, 1);\r\n            setRerender(!rerender)\r\n        } else if (rowaction === 1) {\r\n            tbl_menu.current.tableaction = 1;\r\n            tbl_menu.current.tableindex = index;\r\n            let t_data = tbl_menu.current.tableData[index].table_value\r\n            ctlAttribute.current[0].inputvalue = t_data[0].t_value\r\n            ctlAttribute.current[1].inputvalue = t_data[1].t_value\r\n            setAddOrder(true);\r\n        }\r\n    }\r\n    function fnConfirmOrder() {\r\n        let canFormSubmit = true;\r\n        let err = [];\r\n        let l_validate = [];\r\n        err.push(validate(ctlAttribute.current[0]));\r\n        err.push(validate(ctlAttribute.current[1]));\r\n\r\n        for (let i = 0; i < err.length; i++) {\r\n            if (err[i].founderror === true) {\r\n                canFormSubmit = false;\r\n                ctlAttribute.current[err[i].arrayindex].error.errorshow = true;\r\n                l_validate.push(err[i])\r\n            }\r\n        }\r\n        if (canFormSubmit === false) {\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isvalidation = false;\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isfocus.focus();\r\n            setRerender(!rerender);\r\n        }\r\n        else {\r\n            let l_tableValues = [\r\n                {\r\n                    t_key: 0,\r\n                    t_value: ctlAttribute.current[0].inputvalue,\r\n                },\r\n                {\r\n                    t_key: 1,\r\n                    t_value: ctlAttribute.current[1].inputvalue,\r\n                },\r\n            ]\r\n            if (tbl_menu.current.tableaction === 0) {\r\n                let l_tableThirdvalue = [\r\n                    {\r\n                        t_key: 2,\r\n                        t_value: \"New\",\r\n                    }\r\n                ]\r\n                tbl_menu.current.tableData.push({\r\n                    showrow: true,\r\n                    rowmode: 0,\r\n                    table_value: l_tableValues.concat(l_tableThirdvalue),\r\n                })\r\n            } else if (tbl_menu.current.tableaction === 1) {\r\n                let l_tableThirdvalue = tbl_menu.current.tableData[tbl_menu.current.tableindex].table_value[2]\r\n                let l_tableData = {\r\n                    showrow: true,\r\n                    rowmode: 1,\r\n                    table_value: l_tableValues.concat(l_tableThirdvalue),\r\n                }\r\n                tbl_menu.current.tableData.splice(tbl_menu.current.tableindex, 1, l_tableData)\r\n            }\r\n            ctlAttribute.current[0].inputvalue = \"\";\r\n            ctlAttribute.current[1].inputvalue = \"\";\r\n            setAddOrder(false);\r\n        }\r\n    }\r\n    function fnSaveSelectedButton() {\r\n        const docId = tbl_menu.current.grpbtnrowid;\r\n        const newContent = tbl_menu.current.tableData.map(item => ({\r\n            showrow: item.showrow,\r\n            table_value: [\r\n                {\r\n                    t_key: 0,\r\n                    t_value: item.table_value[0].t_value\r\n                },\r\n                {\r\n                    t_key: 1,\r\n                    t_value: item.table_value[1].t_value\r\n                },\r\n                {\r\n                    t_key: 2,\r\n                    t_value: item.table_value[2].t_value === \"Processing\" || item.table_value[2].t_value === \"New\" ? \"Processing\" : \"Completed\"\r\n                },\r\n            ]\r\n        }));\r\n        const companyName = getAppStoreData.companyName;\r\n        socketRef.current.emit('updateServerOrderProcessing', docId, newContent, companyName);\r\n\r\n        document.body.style = \"\";\r\n        setSideBar(false);\r\n    }\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        console.log(btn_id);\r\n\r\n        switch (btn_id) {\r\n            case \"btn_addorder\":\r\n                tbl_menu.current.tableaction = 0;\r\n                tbl_menu.current.tableindex = null;\r\n                setAddOrder(true)\r\n                break;\r\n            case \"btn_cross\":\r\n            case \"blurdiv\":\r\n            case \"btn_cancel\":\r\n                document.body.style = \"\";\r\n                setSideBar(false);\r\n                break;\r\n            case \"btn_save\":\r\n                fnSaveSelectedButton();\r\n                break;\r\n            case \"btn_crosssearch\":\r\n            case \"btn_cancel_search\":\r\n                ctlAttribute.current[0].inputvalue = \"\";\r\n                ctlAttribute.current[0].error.errorshow = false;\r\n                ctlAttribute.current[1].inputvalue = \"\";\r\n                ctlAttribute.current[1].error.errorshow = false;\r\n                setAddOrder(false)\r\n                break;\r\n            case \"btn_confirm_search\":\r\n                fnConfirmOrder();\r\n                break;\r\n        }\r\n    }\r\n    function handleGroupButtonClick(groupBtnName, index) {\r\n        console.log(groupBtnName);\r\n        console.log(index);\r\n\r\n        switch (groupBtnName) {\r\n            case \"beanchlst\":\r\n                document.body.style.overflow = \"hidden\";\r\n                const clonedData = structuredClone(ctlBench.current.groupbtndata[index].btn_values);\r\n                ctlBench.current.groupbtnselectedname = ctlBench.current.groupbtndata[index].labelname;\r\n                tbl_menu.current.grpbtnrowid = ctlBench.current.groupbtndata[index]._id;\r\n                tbl_menu.current.tableData = clonedData;\r\n                break;\r\n        }\r\n        setSideBar(true);\r\n    }\r\n    function handleTableActionClick(tablename, index, rowmode, rowaction) {\r\n        switch (tablename) {\r\n            case \"tbl_orderlist\":\r\n                fnTableOrderList(index, rowmode, rowaction);\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        // Initialize the socket connection\r\n        socketRef.current = io(socketUrl);\r\n\r\n        // Emit event to start server order placing\r\n        socketRef.current.emit('joinServerOrderProcessing', getAppStoreData.companyName);\r\n\r\n        // Listen for the 'menuList' event from the server\r\n        socketRef.current.on('sendServerOrderProcessing', (responseData) => {\r\n            initControl(responseData);\r\n        });\r\n\r\n        socketRef.current.on('documentUpdated', (docId, newContent, status) => {\r\n            const index = responce_data.current.findIndex(item => item._id === docId);\r\n            const newArr = responce_data.current.filter(item => item._id === docId);\r\n            newArr[0].status = status;\r\n            newArr[0].btn_values = newContent;\r\n            const canArr = responce_data.current.splice(index, 1, newArr[0]);\r\n            fnCreateBench(responce_data.current);\r\n            setRerender(prevRerender => !prevRerender);\r\n        })\r\n\r\n\r\n        // Cleanup: Disconnect the socket on component unmount\r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.disconnect();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    Order Placing\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\" id='card-body'>\r\n                                                    <div className='border-bottom mb-3 pb-3'>\r\n                                                        <h5 className='fw-semibold mb-1'>\r\n                                                            Bench's\r\n                                                        </h5>\r\n                                                        <p>Select the Bench that you want to place the order</p>\r\n                                                    </div>\r\n                                                    <OPGroupButton\r\n                                                        groupBtnName={ctlBench.current.groupbtnname}\r\n                                                        groupBtnData={ctlBench.current.groupbtndata}\r\n                                                        handleGroupButtonClick={handleGroupButtonClick}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                    <div className={`offcanvas offcanvas-end offcanvas-large ${(sideBar ? \"show\" : \"hiding\")}`}>\r\n                        {sideBar && (\r\n                            <>\r\n                                <div className='offcanvas-header border-bottom'>\r\n                                    <h4>{ctlBench.current.groupbtnselectedname}</h4>\r\n                                    <OPButton\r\n                                        ctl_Attribute={ctlAttribute.current[5]}\r\n                                        handleButtonClick={handleButtonClick}\r\n                                    />\r\n                                </div>\r\n                                <div className='offcanvas-body'>\r\n                                    <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                                        <h4>Order</h4>\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[6]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                    </div>\r\n                                    <OPVerticalTable\r\n                                        tablename={tbl_menu.current.tablename}\r\n                                        actionButton={tbl_menu.current.actionButton}\r\n                                        tableMetaData={tbl_menu.current.tableMetaData}\r\n                                        colMetaData={tbl_menu.current.colMetaData}\r\n                                        tableData={tbl_menu.current.tableData}\r\n                                        handleTableActionClick={handleTableActionClick}\r\n                                    />\r\n                                    <div className=\"mt-4 d-flex justify-content-end\" >\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[8]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[7]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    {sideBar && (\r\n                        <div className='offcanvas-backdrop fade show' id='blurdiv' onClick={handleButtonClick} ></div>\r\n                    )}\r\n                    <div className={`modal custom-modal fade ${addOrder ? \"show\" : \"hidding\"}`} style={{ display: addOrder ? \"block\" : \"none\" }}>\r\n                        {addOrder && (\r\n                            <div className=\"modal-dialog modal-dialog-centered \">\r\n                                <div className=\"modal-content\" style={{ height: \"400px\" }}>\r\n                                    <div className=\"modal-header\">\r\n                                        <h5 className=\"modal-title\">Order Please</h5>\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[2]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"modal-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-10\">\r\n                                                <div className=\"mb-5\">\r\n                                                    <OPLocalSearchBar\r\n                                                        ctl_Attribute={ctlAttribute.current[0]}\r\n                                                        rerender={rerender}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-2\">\r\n                                                <div className=\"mb-5\">\r\n                                                    <OPTextBox\r\n                                                        ctl_Attribute={ctlAttribute.current[1]}\r\n                                                        rerender={rerender}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='modal-btn text-end' style={{ marginTop: \"150px\" }}>\r\n                                                <div className=\"mb-3\">\r\n                                                    <OPButton\r\n                                                        ctl_Attribute={ctlAttribute.current[3]}\r\n                                                        handleButtonClick={handleButtonClick}\r\n                                                    />\r\n                                                    <OPButton\r\n                                                        ctl_Attribute={ctlAttribute.current[4]}\r\n                                                        handleButtonClick={handleButtonClick}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPValidations","ctl_attribute","validate","mandatory","brewErr","brewError","inputvalue","controlid","csstheme","id","errmsg","founderror","arrayindex","inputkey","checkMandatory","datatype","validateEmail","retvalidphone","validatePhoneNo","retvalidphonecode","phonecode","_bool","validatePhoneCode","ivalue","isNaN","parseFloat","isFinite","loginid","input","test","validateUserName","validateIsLoginID","aadharno","alpha","alphanumeric","dropdown","validateDropDown","hotelcode","attribute","_filterarr","dropdownlist","filter","item","m_value","length","validateSearchBox","checkValidateDataType","phoneno","username","email","toLowerCase","match","OPGroupButton","_ref","groupBtnName","groupBtnData","handleGroupButtonClick","_jsx","className","children","map","index","showbutton","style","padding","_jsxs","onClick","e","color","labelname","gap","status","maxseats","fontSize","Array","from","_","_Fragment","class","OPLocalSearchBar","ctl_Attribute","rerender","l_rerender","l_setRerender","useState","isShowList","setIsShowList","fltData","useRef","handleOnMouseDown","target","value","tooltip","isvalidation","error","errorshow","useEffect","isfocus","focus","htmlFor","labletext","ref","el","classname","type","errormsg","hinttext","place","readOnly","readonly","disabled","maxLength","onFocus","setCustomValidity","current","String","startsWith","onBlur","err","onChange","includes","autoComplete","Tooltip","isOpen","onMouseDown","m_key","slice","OPTextBox","currentTarget","OPVerticalTable","tablename","actionButton","tableMetaData","colMetaData","tableData","handleChangeSearch","handleTableActionClick","handleSort","handleKeyDown","isTableChanged","openIndex","setOpenIndex","optionBoxRefs","getAppStoreData","useSelector","state","appstate","login_info","handleOnBlur","buttonRect","button","getBoundingClientRect","lstRect","document","getElementById","spaceBelow","window","innerHeight","bottom","optionBox","height","top","handleDropDownList","overflowX","width","h_width","h_name","h_colindex","showrow","table_value","tdata","tindex","t_value","t_key","usertype","hasAction","position","handleOnFocus","zIndex","right","canEditRow","cursor","opacity","backgroundColor","rowid","rowmode","canDeleteRow","OPServerOrderProcessing","startRender","setStartRender","startLoader","setStartLoader","sideBar","setSideBar","addOrder","setAddOrder","setRerender","ctlAttribute","ctlBench","tbl_menu","responce_data","socketRef","initControl","responseData","ctlArray","menuList","_id","menuItem","icon","fnCreateBench","hotelBench","l_tbl_menu","grpbtnrowid","grpbtnindex","tableindex","hasStatus","showPagination","showSearch","h_txtalign","h_navigate","fnBuildMenuList","l_responceData","console","log","l_bench","groupbtnname","groupbtnselectedname","groupbtndata","sts","handleButtonClick","btn_id","tableaction","body","docId","newContent","companyName","emit","fnSaveSelectedButton","canFormSubmit","l_validate","push","i","l_tableValues","l_tableThirdvalue","concat","l_tableData","splice","fnConfirmOrder","io","on","findIndex","newArr","btn_values","prevRerender","disconnect","OPLoader","overflow","clonedData","structuredClone","OPButton","rowaction","t_data","fnTableOrderList","display","marginTop"],"sourceRoot":""}