{"version":3,"file":"static/js/891.b6a34296.chunk.js","mappings":"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","sources":["ComponentOP/OPDropDown.js","ComponentOP/OPReadOnlyTable.js","PagesOP/OPViewEmployees.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { OPValidations } from \"../CommonOP/OPValidations\";\r\nimport { Tooltip } from \"react-tooltip\";\r\n\r\nexport const OPDropDown = ({ ctl_Attribute, rerender }) => {\r\n    const [l_rerender, l_setRerender] = useState(false)\r\n\r\n    useEffect(() => { }, [rerender]);\r\n    const validate = OPValidations();\r\n    const handleOnFocus = (e) => {\r\n        e.currentTarget.setCustomValidity(\"\")\r\n        ctl_Attribute.tooltip.isvalidation = true;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n    const handleOnChange = (e) => {\r\n        ctl_Attribute.error.errorshow = false;\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n    function handleOnBlur(e) {\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        ctl_Attribute.tooltip.isvalidation = false;\r\n        let err = validate(ctl_Attribute);\r\n        if (err.founderror == true) {\r\n            ctl_Attribute.error.errormsg = err.errmsg;\r\n            ctl_Attribute.error.errorshow = true;\r\n            e.currentTarget.setCustomValidity(err.errmsg)\r\n        }\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={ctl_Attribute.csstheme.id} className=\"col-form-label \">{ctl_Attribute.csstheme.labletext}{ctl_Attribute.validate.mandatory ? (<span className=\"text-danger\">&nbsp;*</span>) : null}</label>\r\n            <select\r\n                ref={(el) => {\r\n                    ctl_Attribute.tooltip.isfocus = el\r\n                    ctl_Attribute.tooltip.errorshow = el\r\n                }}\r\n                className={`${ctl_Attribute.csstheme.classname} ${ctl_Attribute.error.errorshow ? \"err-border\" : \"\"}`}\r\n                data-tooltip-content={ctl_Attribute.error.errorshow ? ctl_Attribute.error.errormsg : ctl_Attribute.csstheme.hinttext}\r\n                data-tooltip-id={ctl_Attribute.csstheme.id}\r\n                data-tooltip-place={ctl_Attribute.tooltip.place}\r\n                data-tooltip-class-name={ctl_Attribute.tooltip.classname}\r\n                disabled={ctl_Attribute.csstheme.readonly}\r\n                value={ctl_Attribute.inputvalue}\r\n\r\n                onBlur={handleOnBlur}\r\n                onFocus={handleOnFocus}\r\n                onChange={handleOnChange}\r\n                id={ctl_Attribute.csstheme.id}\r\n            >\r\n                <option id=\"dd-Option\" key=\"000\" value=\"\">\r\n                    Select\r\n                </option>\r\n                {ctl_Attribute.dropdata.map((item, index) => (\r\n                    <option id={`dd-Option ${index}`} key={index} value={item.keylistvalue}>\r\n                        {item.keylistvalue}\r\n                    </option>\r\n                ))};\r\n            </select>\r\n            <Tooltip id={ctl_Attribute.csstheme.id} isOpen={ctl_Attribute.tooltip.isvalidation} />\r\n        </>\r\n    );\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"../assets/css/dataTables.bootstrap5.min.css\"\r\nimport \"../index.css\"\r\n\r\nexport const OPReadOnlyListTable = ({\r\n    tablename,\r\n    actionButton,\r\n    tableMetaData,\r\n    colMetaData,\r\n    tableData,\r\n    handleChangeSearch,\r\n    handleClickTable,\r\n    handleSort,\r\n    handleKeyDown,\r\n    isTableChanged, }) => {\r\n    const [openIndex, setOpenIndex] = useState(null);\r\n    const optionBoxRefs = useRef([]);\r\n\r\n    useEffect(() => { handleDropDownList() }, [openIndex])\r\n\r\n    function handleDropDownList() {\r\n        if (openIndex !== null) {\r\n            const buttonRect = optionBoxRefs.current[openIndex].button.getBoundingClientRect();\r\n            const lstRect = document.getElementById(`optmenu${openIndex}`).getBoundingClientRect();\r\n            const innerHight = window.innerHeight;\r\n            // Replace with your div's ID          \r\n            const spaceBelow = innerHight - buttonRect.bottom;\r\n            const optionBox = optionBoxRefs.current[openIndex].optionBox;\r\n            if (optionBox) {\r\n                if (spaceBelow < lstRect.height) {\r\n                    // Not enough space below, position above              \r\n                    optionBox.style.top = `-${lstRect.height}px`;\r\n                } else {\r\n                    optionBox.style.top = \"33px\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnBlur() {\r\n        setOpenIndex(null);\r\n    }\r\n    function handleOnFocus(index) {\r\n        setOpenIndex(index);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"row dt-row\">\r\n            <div className=\"col-sm-12 table-responsive\"\r\n                style={{ overflowX: 'visible' }}\r\n                id='orderMenu'>\r\n                <table className='table dataTable no-footer'>\r\n                    <thead className='thead-light'>\r\n                        <tr>\r\n                            {colMetaData.map(item => {\r\n                                return (<th className='sorting'\r\n                                    // data-bs-toggle=\"dropdown\"\r\n                                    key={item.h_colindex}\r\n                                    style={{ width: (item.h_width) }}\r\n                                >\r\n                                    {item.h_name}\r\n                                </th>)\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableData.map((item, index) => {\r\n                            return (\r\n                                item.showrow && (\r\n                                    <tr key={`list${index}`} onClick={(e) => handleClickTable(index)}>\r\n                                        {item.table_value.map((tdata, tindex) => {\r\n                                            return (<td key={tdata.t_key} >\r\n                                                {tindex !== 1 && (\r\n                                                    <>\r\n                                                        {tdata.t_value}\r\n                                                    </>\r\n                                                )}\r\n                                                {tindex === 1 && (\r\n                                                    <>\r\n                                                        {\r\n                                                             tdata.t_value === \"Server\" || tdata.t_value === \"Chef\" || tdata.t_value === \"Casher\" ?\r\n                                                                < span className={`badge ${tdata.t_value === \"Server\" ? \"bg-success\" : tdata.t_value === \"Chef\" ? \"bg-blue text-white\" : tdata.t_value === \"Casher\" ? \"bg-secondary\" : \"\"}`\r\n                                                                } >\r\n                                                                    <span className=\"badge-label\">\r\n                                                                        {tdata.t_value}\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                                :\r\n                                                                <>\r\n                                                                    {tdata.t_value}\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                )}\r\n                                            </td>)\r\n                                        })}\r\n                                    </tr>\r\n                                ))\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        </div >\r\n    </>);\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\nimport { OPReadOnlyListTable } from '../ComponentOP/OPReadOnlyTable';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { OPDropDown } from '../ComponentOP/OPDropDown';\r\n\r\nexport const OPViewEmployees = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n    const [listEmp, setListEmp] = useState(true);\r\n    const [viewEmp, setViewEmp] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n    const tbl_empLst = useRef({})\r\n\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n    function fnViewEmpRequest() {\r\n        let _getBody = {\r\n            companyName: getAppStoreData.companyName,\r\n        }\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/viewemployees\",\r\n            apikey: \"VIEWEMP\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n        setStartInit(false);\r\n    }\r\n\r\n    function initControl() {\r\n        if (responseData.isAuth) {\r\n            let ctlArray = [\r\n                {\r\n                    /*txt: First Name  : 0*/\r\n                    arrayindex: 0,\r\n                    csstheme: {\r\n                        labletext: \"User Name\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_username\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee User name \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"username\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Last Name : 1*/\r\n                    arrayindex: 1,\r\n                    csstheme: {\r\n                        labletext: \"Email\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_emailid\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee Email Id\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"email\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Phone Number : 2*/\r\n                    arrayindex: 2,\r\n                    csstheme: {\r\n                        labletext: \"Phone no\",\r\n                        classname: \"form-control\",\r\n                        id: \"num_phoneno\",\r\n                        length: 10,\r\n                        readonly: true,\r\n                        hinttext: \"Enter your Phone Number\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"phoneno\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Employee Types : 3*/\r\n                    arrayindex: 3,\r\n                    csstheme: {\r\n                        labletext: \"Employee Types\",\r\n                        classname: \"form-control\",\r\n                        id: \"sel_Employeetypes\",\r\n                        readonly: true,\r\n                        hinttext:\r\n                            \"Select the usertype for Employee\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"right\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"dropdown\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                    dropdata: [\r\n                        {\r\n                            keylistid: \"11000\",\r\n                            keylistvalue: \"Server\"\r\n                        },\r\n                        {\r\n                            keylistid: \"11001\",\r\n                            keylistvalue: \"Chef\"\r\n                        },\r\n                        {\r\n                            keylistid: '11002',\r\n                            keylistvalue: \"Casher\"\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    /*txt: Password : 4*/\r\n                    arrayindex: 4,\r\n                    csstheme: {\r\n                        labletext: \"Password\",\r\n                        classname: \"form-control\",\r\n                        id: \"text-email\",\r\n                        length: 50,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee Password\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"text\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Confirm Password : 5*/\r\n                    arrayindex: 5,\r\n                    csstheme: {\r\n                        labletext: \"Confirm Password\",\r\n                        classname: \"form-control\",\r\n                        id: \"text-confirmpassword\",\r\n                        length: 50,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Employee Confirm Password\",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"dropdown\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Save Changes : 6*/\r\n                    arrayindex: 6,\r\n                    csstheme: {\r\n                        labletext: \"Save Changes\",\r\n                        classname: \"btn btn-primary me-2\",\r\n                        id: \"btn_savechange\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Edit : 7*/\r\n                    arrayindex: 7,\r\n                    csstheme: {\r\n                        labletext: \"Edit\",\r\n                        classname: \"btn btn-secondary me-2\",\r\n                        id: \"btn_edit\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Delete : 8*/\r\n                    arrayindex: 8,\r\n                    csstheme: {\r\n                        labletext: \"Delete\",\r\n                        classname: \"btn btn-primary me-2\",\r\n                        id: \"btn_delete\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:Delete : 9*/\r\n                    arrayindex: 9,\r\n                    csstheme: {\r\n                        labletext: \"Cancel\",\r\n                        classname: \"btn btn-light me-2\",\r\n                        id: \"btn_cancel\",\r\n                    },\r\n                }\r\n            ]\r\n            ctlAttribute.current = ctlArray;\r\n            fnBuildEmployeesList(responseData.errormsg);\r\n            setStartRender(true);\r\n            setStartLoader(false);\r\n\r\n        } else {\r\n            console.log(responseData.errormsg);\r\n        }\r\n    }\r\n\r\n\r\n    function fnBuildEmployeesList(resTableData) {\r\n        const benchlst = resTableData\r\n            .map(item => ({\r\n                rowid: item._id,\r\n                showrow: true,\r\n                table_value: [\r\n                    {\r\n                        t_key: 0,\r\n                        t_value: item.userName.charAt(0).toUpperCase() + item.userName.slice(1),\r\n                    },\r\n                    {\r\n                        t_key: 1,\r\n                        t_value: item.employeeType,\r\n                    },\r\n                    {\r\n                        t_key: 2,\r\n                        t_value: item.mailID,\r\n                    },\r\n                    {\r\n                        t_key: 3,\r\n                        t_value: item.phone,\r\n                    },\r\n                ]\r\n            }))\r\n\r\n        let l_tbl_empLst = {\r\n            tablename: \"tbl_orderlist\",\r\n            tableindex: null,\r\n            tabledataid: null,\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Employee's\",\r\n                    h_width: \"150px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"User Type\",\r\n                    h_width: \"43px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Mail\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 3,\r\n                    h_name: \"Phone\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: benchlst,\r\n        };\r\n        tbl_empLst.current = l_tbl_empLst\r\n    }\r\n    function checkPassword(p1, p2) {\r\n        if (p1 === p2) {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        switch (btn_id) {\r\n            case \"btn_cancel\":\r\n                setListEmp(true);\r\n                setViewEmp(false);\r\n                break;\r\n            case \"btn_delete\":\r\n                fnDeleteData();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleClickTable(index) {\r\n        const employeeDetial = tbl_empLst.current.tableData[index];\r\n        tbl_empLst.current.tableindex = index;\r\n        tbl_empLst.current.tabledataid = employeeDetial.rowid;\r\n        ctlAttribute.current[0].inputvalue = employeeDetial.table_value[0].t_value\r\n        ctlAttribute.current[1].inputvalue = employeeDetial.table_value[2].t_value\r\n        ctlAttribute.current[2].inputvalue = employeeDetial.table_value[3].t_value\r\n        ctlAttribute.current[3].inputvalue = employeeDetial.table_value[1].t_value\r\n        setListEmp(false);\r\n        setViewEmp(true);\r\n    }\r\n\r\n    function fnDeleteData() {\r\n        tbl_empLst.current.tableData.splice(tbl_empLst.current.tableindex, 1);\r\n        let _getBody = {\r\n            _id: tbl_empLst.current.tabledataid,\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/deleteemployees\",\r\n            apikey: \"DELEMP\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n    }\r\n\r\n    function fnDeleteEmpResult() {\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current = {\r\n                name: \"Employee Deleted Successfully\",\r\n                title: responseData.errormsg.userName,\r\n                photo:\"success\"\r\n            }\r\n            setViewEmp(false);\r\n            setListEmp(true);\r\n            setNotify(true);\r\n            setNotify(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            fnViewEmpRequest();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                console.log(apiKey)\r\n                switch (apiKey) {\r\n                    case \"DELEMP\":\r\n                        fnDeleteEmpResult();\r\n                        break;\r\n                    case \"VIEWEMP\":\r\n                        initControl();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    useEffect(() => {\r\n        if (notify) {\r\n            const closeNotify = setInterval(() => {\r\n                setNotify(false);\r\n            }, 2000);\r\n            return () => clearInterval(closeNotify);\r\n        }\r\n    }, [notify]);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    View Employee's\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {listEmp &&\r\n                                        < div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                View Employee's\r\n                                                            </h5>\r\n                                                            <p>Showing your Employees</p>\r\n                                                        </div>\r\n                                                        <OPReadOnlyListTable\r\n                                                            tablename={tbl_empLst.current.tablename}\r\n                                                            actionButton={tbl_empLst.current.actionButton}\r\n                                                            tableMetaData={tbl_empLst.current.tableMetaData}\r\n                                                            colMetaData={tbl_empLst.current.colMetaData}\r\n                                                            tableData={tbl_empLst.current.tableData}\r\n                                                            handleClickTable={handleClickTable}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    {viewEmp &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                Employee User Details\r\n                                                            </h5>\r\n                                                            <p>Showing User Details in ReadOnly Method</p>\r\n                                                        </div>\r\n                                                        <div className=\"border-bottom mb-3\">\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[2]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPDropDown\r\n                                                                            ctl_Attribute={ctlAttribute.current[3]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='mt-4 d-flex justify-content-end'>\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[9]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[8]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPDropDown","_ref","ctl_Attribute","rerender","l_rerender","l_setRerender","useState","useEffect","validate","OPValidations","_jsxs","_Fragment","children","htmlFor","csstheme","id","className","labletext","mandatory","_jsx","ref","el","tooltip","isfocus","errorshow","classname","error","errormsg","hinttext","place","disabled","readonly","value","inputvalue","onBlur","e","currentTarget","isvalidation","err","founderror","errmsg","setCustomValidity","onFocus","onChange","dropdata","map","item","index","keylistvalue","Tooltip","isOpen","OPReadOnlyListTable","tablename","actionButton","tableMetaData","colMetaData","tableData","handleChangeSearch","handleClickTable","handleSort","handleKeyDown","isTableChanged","openIndex","setOpenIndex","optionBoxRefs","useRef","buttonRect","current","button","getBoundingClientRect","lstRect","document","getElementById","spaceBelow","window","innerHeight","bottom","optionBox","height","style","top","handleDropDownList","overflowX","width","h_width","h_name","h_colindex","showrow","onClick","table_value","tdata","tindex","t_value","t_key","OPViewEmployees","startInit","setStartInit","startRender","setStartRender","startLoader","setStartLoader","setRerender","notify","setNotify","listEmp","setListEmp","viewEmp","setViewEmp","ctlAttribute","ctlNotify","tbl_empLst","getAppStoreData","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","initControl","isAuth","ctlArray","arrayindex","length","datatype","keylistid","resTableData","l_tbl_empLst","tableindex","tabledataid","showPagination","showSearch","h_txtalign","h_navigate","rowid","_id","userName","charAt","toUpperCase","slice","employeeType","mailID","phone","fnBuildEmployeesList","console","log","handleButtonClick","splice","_getBody","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnDeleteData","companyName","fnViewEmpRequest","name","title","photo","closeNotify","setInterval","clearInterval","OPLoader","OPNotification","nameProps","titleProps","photoProps","bool","employeeDetial","OPTextBox","OPButton"],"sourceRoot":""}