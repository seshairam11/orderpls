{"version":3,"file":"static/js/929.6e7f2589.chunk.js","mappings":"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","sources":["CommonOP/OPValidations.js","ComponentOP/OPCards.js","PagesOP/OPHotelSettings.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport const OPValidations = () => {\r\n  return function validateControls(ctl_attribute) {\r\n\r\n    if (ctl_attribute.validate.mandatory === true) {\r\n      let brewErr = checkMandatory(ctl_attribute);\r\n      if (brewErr.founderror === true) {\r\n        return brewErr;\r\n      }\r\n    }\r\n\r\n    return checkValidateDataType(ctl_attribute);\r\n  };\r\n\r\n  function checkValidateDataType(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue != \"\") {\r\n      switch (ctl_attribute.validate.datatype) {\r\n        case \"email\":\r\n          let retvalidemail = validateEmail(ctl_attribute.inputvalue);\r\n          if (retvalidemail === null) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"No Valid Email address entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"phoneno\":\r\n          let retvalidphone = validatePhoneNo(ctl_attribute.inputvalue);\r\n          let retvalidphonecode = validatePhoneCode(ctl_attribute.inputkey);\r\n          if (retvalidphone === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Phone no entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          } else if (retvalidphonecode === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Phone Code doesn't been empty\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"numeric\":\r\n          let retvalidnumeric = validateIsNumber(ctl_attribute.inputvalue);\r\n          if (retvalidnumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Accepts Only Numeric Field\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"loginid\":\r\n          let retvalidLoginid = validateIsLoginID(ctl_attribute.inputvalue);\r\n          if (retvalidLoginid === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Field entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"aadharno\":\r\n          let retvalidAadhar = validateAadharNo(ctl_attribute.inputvalue);\r\n          if (retvalidAadhar === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Aadhar no\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alpha\":\r\n          let retvalidAlpha = validateAlpha(ctl_attribute.inputvalue);\r\n          if (retvalidAlpha === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only Alphabet\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alphanumeric\":\r\n          let retvalidAlphaNumeric = validateAlphaNumeric(ctl_attribute.inputvalue);\r\n          if (retvalidAlphaNumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only AlphaNumeric\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"dropdown\":\r\n          let retvalidDropDown = validateDropDown(ctl_attribute.inputvalue);\r\n          if (retvalidDropDown === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Selection\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"username\":\r\n          let retvalidUserName = validateUserName(ctl_attribute.inputvalue);\r\n          if (retvalidUserName === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Syntax only (@ and _ )\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n\r\n        case \"hotelcode\":\r\n          let retvalidGOTID = validateHotelCode(ctl_attribute.inputvalue);\r\n          if (retvalidGOTID === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid offer ID\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"searchBox\":\r\n          let retvalidssearchbox = validateSearchBox(ctl_attribute);\r\n          if (retvalidssearchbox === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Not in Menu\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        default:\r\n          brewError.controlid = ctl_attribute.csstheme.id;\r\n          brewError.errmsg = \"\";\r\n          brewError.founderror = false;\r\n          brewError.arrayindex = ctl_attribute.arrayindex;\r\n          break;\r\n      }\r\n    }\r\n    return brewError;\r\n  }\r\n\r\n  function validatePhoneNo(phoneno) {\r\n    let a = /^\\d{10}$/;\r\n    return a.test(phoneno);\r\n  }\r\n  function validateHotelCode(hotelcode) {\r\n    let a = /^\\d{9}$/;\r\n    return a.test(hotelcode);\r\n  }\r\n\r\n  function validateUserName(username) {\r\n    let s = /^[a-zA-Z0-9\\_\\@]+$/;\r\n    return s.test(username)\r\n  }\r\n\r\n  function validateAadharNo(aadharno) {\r\n    let s = /^\\d{12}$/;\r\n    return s.test(aadharno);\r\n  }\r\n  function validateAlpha(alpha) {\r\n    let s = /^[A-Za-z\\ ]+$/;\r\n    return s.test(alpha);\r\n  }\r\n  function validateAlphaNumeric(alphanumeric) {\r\n    let s = /^[0-9a-zA-Z\\ ]+$/;\r\n    return s.test(alphanumeric);\r\n  }\r\n  function validatePhoneCode(phonecode) {\r\n    let _bool = true;\r\n    if (phonecode === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateDropDown(dropdown) {\r\n    let _bool = true;\r\n    if (dropdown === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateEmail(email) {\r\n    return email\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  }\r\n  function isOnlyNumbers(input) {\r\n    const numberRegex = /^\\d+$/;\r\n    return numberRegex.test(input);\r\n  }\r\n  function validateIsLoginID(loginid) {\r\n    if (isOnlyNumbers(loginid)) {\r\n      return validatePhoneNo(loginid);\r\n    }else if(validateEmail(loginid)){\r\n      return true;\r\n    }else if(validateUserName(loginid)){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n\r\n  }\r\n  function validateSearchBox(attribute) {\r\n    let _filterarr = attribute.dropdownlist.filter(item => item.m_value === attribute.inputvalue);\r\n    let _bool = true\r\n    if (_filterarr.length === 0) {\r\n      _bool = false\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateIsNumber(ivalue) {\r\n    return !isNaN(parseFloat(ivalue)) && isFinite(ivalue);\r\n  }\r\n  function checkMandatory(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"This field is mandatory\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    } else if (ctl_attribute.inputkey === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"Invalid Selection\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    else {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"\";\r\n      brewError.founderror = false;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    return brewError;\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport const OPCards = ({ Ctl_Card }) => {\r\n    return (\r\n        <>\r\n            {Ctl_Card.map((item) => {\r\n                return (\r\n                    <div className='col-lg-4 col-md-6 d-flex'>\r\n                        <div className='card border shadow-none flex-fill mb-3'>\r\n                            <div className='card-body d-flex justify-content-between flex-column'>\r\n                                <div className=\"mb-3\">\r\n                                    <div className='d-flex align-items-center justify-content-between mb-1'>\r\n                                        <h6 className=\"fw-semibold\">{item.title}</h6>\r\n                                    </div>\r\n                                    <p>\r\n                                        {item.para}\r\n                                        <span className='text-gray-9'>{item.span}</span>\r\n                                    </p>\r\n                                </div>\r\n                                <div>\r\n                                    {item.whitebutton?.showbutton &&\r\n                                        <button\r\n                                            id={item.whitebutton?.id}\r\n                                            className='btn btn-light me-3 btn2lnk'>\r\n                                            {item.whitebutton?.labelname}\r\n                                        </button>\r\n                                    }\r\n                                    {item.redbutton?.showbutton &&\r\n                                        <button\r\n                                            id={item.redbutton?.id}\r\n                                            className='btn btn-primary btn2lnk'>\r\n                                            {item.redbutton?.labelname}\r\n                                        </button>\r\n                                    }\r\n                                    {item.linkbutton?.showbutton &&\r\n                                        <button\r\n                                            id={item.linkbutton?.id}\r\n                                            className='link-danger fw-semibold btn2lnk'>\r\n                                            {item.linkbutton?.labelname}\r\n                                        </button>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n{/*\r\n    {\r\n                arrayindex: 0,\r\n                title: \"Password\",\r\n                para: \"Last Changed 03 Jan 2023, 09:00 AM\",\r\n                span: \"\",\r\n                whitebutton: {\r\n                    showbutton: true,\r\n                    id: \"changepassword\",\r\n                    labelname: \"Change Password\",\r\n                },\r\n                redbutton: {\r\n                    showbutton: false,\r\n                    labelname: \"Change Password\",\r\n                },\r\n                linkbutton: {\r\n                    showbutton: false,\r\n                    labelname: \"Change Password\",\r\n                }\r\n            },\r\n    */}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPCards } from '../ComponentOP/OPCards';\r\n\r\nexport const OPHotelSettings = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlCard = useRef([]);\r\n\r\n    const validate = OPValidations();\r\n    function initControl() {\r\n        let ctlArray = [\r\n\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n        let ctl_Card = [\r\n            {\r\n                arrayindex: 0,\r\n                title: \"Password\",\r\n                para: \"Last Changed 03 Jan 2023, 09:00 AM\",\r\n                span: \"\",\r\n                whitebutton: {\r\n                    showbutton: true,\r\n                    id: \"changepassword\",\r\n                    labelname: \"Change\",\r\n                },\r\n            },\r\n            {\r\n                arrayindex: 1,\r\n                title: \"Phone Number Verification\",\r\n                para: \"Verified Mobile Number : \",\r\n                span: \"+917010631022\",\r\n                whitebutton: {\r\n                    showbutton: true,\r\n                    id: \"changeph\",\r\n                    labelname: \"Change\",\r\n                },\r\n                linkbutton: {\r\n                    showbutton: true,\r\n                    id: \"removeph\",\r\n                    labelname: \"Remove\",\r\n                },\r\n            },\r\n            {\r\n                arrayindex: 2,\r\n                title: \"Email Verification\",\r\n                para: \"Verified Email : \",\r\n                span: \"4602seshasairam@gmail.com\",\r\n                whitebutton: {\r\n                    showbutton: true,\r\n                    id: \"changeeid\",\r\n                    labelname: \"Change\",\r\n                },\r\n                linkbutton: {\r\n                    showbutton: true,\r\n                    id: \"removeeid\",\r\n                    labelname: \"Remove\",\r\n                },\r\n            },\r\n            {\r\n                arrayindex: 3,\r\n                title: \"Device Management\",\r\n                para: \"Last Changed 17 Feb 2023, 11.00 AM\",\r\n                span: \"\",\r\n                whitebutton: {\r\n                    showbutton: true,\r\n                    id: \"manage\",\r\n                    labelname: \"Manage\",\r\n                },\r\n            },\r\n            {\r\n                arrayindex: 4,\r\n                title: \"Account Activity\",\r\n                para: \"Last Changed 22 Feb 2023, 01:20 PM\",\r\n                span: \"\",\r\n                whitebutton: {\r\n                    showbutton: true,\r\n                    id: \"view\",\r\n                    labelname: \"View\",\r\n                },\r\n            },\r\n            {\r\n                arrayindex: 5,\r\n                title: \"Delete Account\",\r\n                para: \"Last Changed 13 Mar 2023, 02:40 PM\",\r\n                span: \"\",\r\n                redbutton: {\r\n                    showbutton: true,\r\n                    id: \"deleteaccount\",\r\n                    labelname: \"Delete Account\",\r\n                },\r\n            },\r\n        ]\r\n        ctlCard.current = ctl_Card;\r\n\r\n        setStartInit(false);\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        console.log(btn_id);\r\n        switch (btn_id) {\r\n\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (startInit === true)\r\n            initControl();\r\n    }, [startInit]);\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    Settings\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <h4 className='fw-semibold mb-3'>\r\n                                                        Security Settings\r\n                                                    </h4>\r\n                                                    <div className=\"row\">\r\n                                                        <OPCards\r\n                                                            Ctl_Card={ctlCard.current}\r\n                                                        />\r\n                                                    </div>\r\n                                                    {/* <div className='mt-4 d-flex justify-content-end'>\r\n                                                        <OPButton\r\n                                                            ctl_Attribute={ctlAttribute.current[10]}\r\n                                                            handleButtonClick={handleButtonClick}\r\n                                                        />\r\n                                                        <OPButton\r\n                                                            ctl_Attribute={ctlAttribute.current[11]}\r\n                                                            handleButtonClick={handleButtonClick}\r\n                                                        />\r\n                                                    </div> */}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPValidations","ctl_attribute","validate","mandatory","brewErr","brewError","inputvalue","controlid","csstheme","id","errmsg","founderror","arrayindex","inputkey","checkMandatory","datatype","validateEmail","retvalidphone","validatePhoneNo","retvalidphonecode","phonecode","_bool","validatePhoneCode","ivalue","isNaN","parseFloat","isFinite","loginid","input","test","validateUserName","validateIsLoginID","aadharno","alpha","alphanumeric","dropdown","validateDropDown","hotelcode","attribute","_filterarr","dropdownlist","filter","item","m_value","length","validateSearchBox","checkValidateDataType","phoneno","username","email","toLowerCase","match","OPCards","_ref","Ctl_Card","_jsx","_Fragment","children","map","_item$whitebutton","_item$whitebutton2","_item$whitebutton3","_item$redbutton","_item$redbutton2","_item$redbutton3","_item$linkbutton","_item$linkbutton2","_item$linkbutton3","className","_jsxs","title","para","span","whitebutton","showbutton","labelname","redbutton","linkbutton","OPHotelSettings","startInit","setStartInit","useState","startRender","setStartRender","startLoader","setStartLoader","rerender","setRerender","ctlAttribute","useRef","ctlCard","useEffect","current","OPLoader"],"sourceRoot":""}