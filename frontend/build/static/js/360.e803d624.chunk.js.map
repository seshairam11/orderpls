{"version":3,"file":"static/js/360.e803d624.chunk.js","mappings":"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","sources":["ComponentOP/OPReadOnlyTable.js","PagesOP/OPViewBench.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport \"../assets/css/dataTables.bootstrap5.min.css\"\r\nimport \"../index.css\"\r\n\r\nexport const OPReadOnlyListTable = ({\r\n    tablename,\r\n    actionButton,\r\n    tableMetaData,\r\n    colMetaData,\r\n    tableData,\r\n    handleChangeSearch,\r\n    handleClickTable,\r\n    handleSort,\r\n    handleKeyDown,\r\n    isTableChanged, }) => {\r\n    const [openIndex, setOpenIndex] = useState(null);\r\n    const optionBoxRefs = useRef([]);\r\n\r\n    useEffect(() => { handleDropDownList() }, [openIndex])\r\n\r\n    function handleDropDownList() {\r\n        if (openIndex !== null) {\r\n            const buttonRect = optionBoxRefs.current[openIndex].button.getBoundingClientRect();\r\n            const lstRect = document.getElementById(`optmenu${openIndex}`).getBoundingClientRect();\r\n            const innerHight = window.innerHeight;\r\n            // Replace with your div's ID          \r\n            const spaceBelow = innerHight - buttonRect.bottom;\r\n            const optionBox = optionBoxRefs.current[openIndex].optionBox;\r\n            if (optionBox) {\r\n                if (spaceBelow < lstRect.height) {\r\n                    // Not enough space below, position above              \r\n                    optionBox.style.top = `-${lstRect.height}px`;\r\n                } else {\r\n                    optionBox.style.top = \"33px\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnBlur() {\r\n        setOpenIndex(null);\r\n    }\r\n    function handleOnFocus(index) {\r\n        setOpenIndex(index);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"row dt-row\">\r\n            <div className=\"col-sm-12 table-responsive\"\r\n                style={{ overflowX: 'visible' }}\r\n                id='orderMenu'>\r\n                <table className='table dataTable no-footer'>\r\n                    <thead className='thead-light'>\r\n                        <tr>\r\n                            {colMetaData.map(item => {\r\n                                return (<th className='sorting'\r\n                                    // data-bs-toggle=\"dropdown\"\r\n                                    key={item.h_colindex}\r\n                                    style={{ width: (item.h_width) }}\r\n                                >\r\n                                    {item.h_name}\r\n                                </th>)\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableData.map((item, index) => {\r\n                            return (\r\n                                item.showrow && (\r\n                                    <tr key={`list${index}`} onClick={(e) => handleClickTable(index)}>\r\n                                        {item.table_value.map((tdata, tindex) => {\r\n                                            return (<td key={tdata.t_key} >\r\n                                                {tindex !== 1 && (\r\n                                                    <>\r\n                                                        {tdata.t_value}\r\n                                                    </>\r\n                                                )}\r\n                                                {tindex === 1 && (\r\n                                                    <>\r\n                                                        {\r\n                                                             tdata.t_value === \"Server\" || tdata.t_value === \"Chef\" || tdata.t_value === \"Casher\" ?\r\n                                                                < span className={`badge ${tdata.t_value === \"Server\" ? \"bg-success\" : tdata.t_value === \"Chef\" ? \"bg-blue text-white\" : tdata.t_value === \"Casher\" ? \"bg-secondary\" : \"\"}`\r\n                                                                } >\r\n                                                                    <span className=\"badge-label\">\r\n                                                                        {tdata.t_value}\r\n                                                                    </span>\r\n                                                                </span>\r\n                                                                :\r\n                                                                <>\r\n                                                                    {tdata.t_value}\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                )}\r\n                                            </td>)\r\n                                        })}\r\n                                    </tr>\r\n                                ))\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        </div >\r\n    </>);\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\nimport { OPReadOnlyListTable } from '../ComponentOP/OPReadOnlyTable';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\n\r\nexport const OPViewBench = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n    const [listBench, setListBench] = useState(true);\r\n    const [viewBench, setViewBench] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n    const tbl_BenchLst = useRef({})\r\n\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n    function fnViewBenchRequest() {\r\n        let _getBody = {\r\n            companyName: getAppStoreData.companyName,\r\n        }\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/viewbench\",\r\n            apikey: \"VIEWBENCH\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n        setStartInit(false);\r\n    }\r\n\r\n    function initControl() {\r\n        if (responseData.isAuth) {\r\n            let ctlArray = [\r\n                {\r\n                    /*txt: First Name  : 0*/\r\n                    arrayindex: 0,\r\n                    csstheme: {\r\n                        labletext: \"Table Nmae\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_benchname\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter your Table Name \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"alpha\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Maximum seats : 1*/\r\n                    arrayindex: 1,\r\n                    csstheme: {\r\n                        labletext: \"Maximum seats\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_Maximum seats\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Maximum seats \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"numeric\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Last Name : 2*/\r\n                    arrayindex: 2,\r\n                    csstheme: {\r\n                        labletext: \"Status\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_Status\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Table Status \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"alphanumeric\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: Server Name : 3*/\r\n                    arrayindex: 3,\r\n                    csstheme: {\r\n                        labletext: \"Server Name\t\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_Price\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Server Name \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"alphanumeric\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*txt: chef Name : 4*/\r\n                    arrayindex: 4,\r\n                    csstheme: {\r\n                        labletext: \"chef Name\",\r\n                        classname: \"form-control\",\r\n                        id: \"txt_chefname\",\r\n                        length: 20,\r\n                        readonly: true,\r\n                        hinttext: \"Enter the Chef Name \",\r\n                    },\r\n                    inputvalue: \"\",\r\n                    tooltip: {\r\n                        place: \"bottom\",\r\n                        classname: \"tooltip-react\",\r\n                        isfocus: \"\",\r\n                        errorshow: \"\",\r\n                        isvalidation: false,\r\n                    },\r\n                    validate: {\r\n                        mandatory: true,\r\n                        datatype: \"alphanumeric\",\r\n                    },\r\n                    error: {\r\n                        errorshow: false,\r\n                        errormsg: \"The field is mandatory\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:cross : 5*/\r\n                    arrayindex: 5,\r\n                    csstheme: {\r\n                        labletext: \"Cancel\",\r\n                        classname: \"btn btn-light me-2\",\r\n                        id: \"btn_cancel\",\r\n                    },\r\n                },\r\n                {\r\n                    /*btn:cross : 6*/\r\n                    arrayindex: 6,\r\n                    csstheme: {\r\n                        labletext: \"Delete\",\r\n                        classname: \"btn btn-primary\",\r\n                        id: \"btn_delete\",\r\n                    },\r\n                }\r\n            ]\r\n            ctlAttribute.current = ctlArray;\r\n            fnBuildEmployeesList(responseData.errormsg);\r\n            setStartRender(true);\r\n            setStartLoader(false);\r\n            // setStartInit(false);\r\n\r\n        } else {\r\n            console.log(responseData.errormsg);\r\n        }\r\n    }\r\n\r\n\r\n    function fnBuildEmployeesList(resTableData) {\r\n        console.log(resTableData);\r\n        const benchlst = resTableData.map(item => ({\r\n            _id: item._id,\r\n            showrow: true,\r\n            table_value: [\r\n                {\r\n                    t_key: 0,\r\n                    t_value: item.labelname,\r\n                },\r\n                {\r\n                    t_key: 1,\r\n                    t_value: item.maxseats,\r\n                },\r\n                {\r\n                    t_key: 2,\r\n                    t_value: item.status,\r\n                },\r\n                {\r\n                    t_key: 3,\r\n                    t_value: item.serverName ?? \"NULL\",\r\n                },\r\n                {\r\n                    t_key: 4,\r\n                    t_value: item.chefName ?? \"NULL\",\r\n                },\r\n            ]\r\n        }))\r\n\r\n        let l_tbl_menuLst = {\r\n            tablename: \"tbl_orderlist\",\r\n            tableindex: null,\r\n            tabledataid: null,\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Table Name\",\r\n                    h_width: \"150px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Maximum seats\",\r\n                    h_width: \"50px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Status\",\r\n                    h_width: \"50px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 3,\r\n                    h_name: \"Server Name\",\r\n                    h_width: \"50px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 4,\r\n                    h_name: \"chef Name\",\r\n                    h_width: \"50px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: benchlst,\r\n        };\r\n        tbl_BenchLst.current = l_tbl_menuLst\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        switch (btn_id) {\r\n            case \"btn_cancel\":\r\n                setListBench(true);\r\n                setViewBench(false);\r\n                break;\r\n            case \"btn_delete\":\r\n                fnDeleteData();\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleClickTable(index) {\r\n        const menuDetial = tbl_BenchLst.current.tableData[index];\r\n        tbl_BenchLst.current.tableindex = index;\r\n        tbl_BenchLst.current.tabledataid = menuDetial._id;\r\n        ctlAttribute.current[0].inputvalue = menuDetial.table_value[0].t_value\r\n        ctlAttribute.current[1].inputvalue = menuDetial.table_value[1].t_value\r\n        ctlAttribute.current[2].inputvalue = menuDetial.table_value[2].t_value\r\n        ctlAttribute.current[3].inputvalue = menuDetial.table_value[3].t_value\r\n        ctlAttribute.current[4].inputvalue = menuDetial.table_value[4].t_value\r\n        setListBench(false);\r\n        setViewBench(true);\r\n    }\r\n\r\n    function fnDeleteData() {\r\n        tbl_BenchLst.current.tableData.splice(tbl_BenchLst.current.tableindex, 1);\r\n        let _getBody = {\r\n            _id: tbl_BenchLst.current.tabledataid,\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/deletebench\",\r\n            apikey: \"DELBENCH\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n    }\r\n\r\n    function fnDeleteBenchResult() {\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current = {\r\n                name: \"Bench Deleted Successfully\",\r\n                title: responseData.errormsg.labelname,\r\n                photo: \"success\"\r\n            }\r\n            setViewBench(false);\r\n            setListBench(true);\r\n            setNotify(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            fnViewBenchRequest();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                switch (apiKey) {\r\n                    case \"DELBENCH\":\r\n                        fnDeleteBenchResult();\r\n                        break;\r\n                    case \"VIEWBENCH\":\r\n                        initControl();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    useEffect(() => {\r\n        if (notify) {\r\n            const closeNotify = setInterval(() => {\r\n                setNotify(false);\r\n            }, 2000);\r\n            return () => clearInterval(closeNotify);\r\n        }\r\n    }, [notify]);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    View Bench list\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    {listBench &&\r\n                                        < div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                View Bench's\r\n                                                            </h5>\r\n                                                            <p>Showing menu list</p>\r\n                                                        </div>\r\n                                                        <OPReadOnlyListTable\r\n                                                            tablename={tbl_BenchLst.current.tablename}\r\n                                                            actionButton={tbl_BenchLst.current.actionButton}\r\n                                                            tableMetaData={tbl_BenchLst.current.tableMetaData}\r\n                                                            colMetaData={tbl_BenchLst.current.colMetaData}\r\n                                                            tableData={tbl_BenchLst.current.tableData}\r\n                                                            handleClickTable={handleClickTable}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                    {viewBench &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-lg-12\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-body\">\r\n                                                        <div className='border-bottom mb-3 pb-3'>\r\n                                                            <h5 className='fw-semibold mb-1'>\r\n                                                                Bench Details\r\n                                                            </h5>\r\n                                                            <p>Showing Bench Details in ReadOnly Method</p>\r\n                                                        </div>\r\n                                                        <div className=\"border-bottom mb-3\">\r\n                                                            \r\n                                                        <div className=\"row\">\r\n                                                                <div className=\"col-md-4\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-4\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-4\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[2]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"row\">\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[3]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"col-md-6\">\r\n                                                                    <div className=\"mb-3\">\r\n                                                                        <OPTextBox\r\n                                                                            ctl_Attribute={ctlAttribute.current[4]}\r\n                                                                            rerender={rerender}\r\n                                                                        />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className='mt-4 d-flex justify-content-end'>\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[5]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                            <OPButton\r\n                                                                ctl_Attribute={ctlAttribute.current[6]}\r\n                                                                handleButtonClick={handleButtonClick}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )\r\n            }\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPReadOnlyListTable","_ref","tablename","actionButton","tableMetaData","colMetaData","tableData","handleChangeSearch","handleClickTable","handleSort","handleKeyDown","isTableChanged","openIndex","setOpenIndex","useState","optionBoxRefs","useRef","useEffect","buttonRect","current","button","getBoundingClientRect","lstRect","document","getElementById","spaceBelow","window","innerHeight","bottom","optionBox","height","style","top","handleDropDownList","_jsx","_Fragment","children","className","overflowX","id","_jsxs","map","item","width","h_width","h_name","h_colindex","index","showrow","onClick","e","table_value","tdata","tindex","t_value","t_key","OPViewBench","startInit","setStartInit","startRender","setStartRender","startLoader","setStartLoader","rerender","setRerender","notify","setNotify","listBench","setListBench","viewBench","setViewBench","ctlAttribute","ctlNotify","tbl_BenchLst","getAppStoreData","OPValidations","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","initControl","isAuth","ctlArray","arrayindex","csstheme","labletext","classname","length","readonly","hinttext","inputvalue","tooltip","place","isfocus","errorshow","isvalidation","validate","mandatory","datatype","error","errormsg","resTableData","console","log","l_tbl_menuLst","tableindex","tabledataid","showPagination","showSearch","h_txtalign","h_navigate","_item$serverName","_item$chefName","_id","labelname","maxseats","status","serverName","chefName","fnBuildEmployeesList","handleButtonClick","currentTarget","splice","_getBody","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnDeleteData","companyName","fnViewBenchRequest","name","title","photo","closeNotify","setInterval","clearInterval","OPLoader","OPNotification","nameProps","titleProps","photoProps","bool","menuDetial","OPTextBox","ctl_Attribute","OPButton"],"sourceRoot":""}