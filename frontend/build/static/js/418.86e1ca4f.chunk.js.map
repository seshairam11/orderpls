{"version":3,"file":"static/js/418.86e1ca4f.chunk.js","mappings":"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","sources":["PagesOP/OPAddBench.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\n\r\nexport const OPAddBench = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n\r\n    const navigate = useNavigate();\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n\r\n\r\n    function initControl() {\r\n        let ctlArray = [\r\n            {\r\n                /*txt: Menu List  : 0*/\r\n                arrayindex: 0,\r\n                csstheme: {\r\n                    labletext: \"Table\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_bench\",\r\n                    length: 20,\r\n                    readonly: false,\r\n                    hinttext: \"Enter your Table \",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"alphanumeric\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: Price : 1*/\r\n                arrayindex: 1,\r\n                csstheme: {\r\n                    labletext: \"Max Seats\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_maxseats\",\r\n                    length: 20,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the Maximum seats\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"numeric\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cross : 2*/\r\n                arrayindex: 2,\r\n                csstheme: {\r\n                    labletext: \"Save\",\r\n                    classname: \"btn btn-primary\",\r\n                    id: \"btn_save\",\r\n                },\r\n            }\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n\r\n        setStartInit(false);\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        console.log(btn_id);\r\n        switch (btn_id) {\r\n\r\n            case \"btn_save\":\r\n                fnSave();\r\n                break;\r\n        }\r\n    }\r\n    function fnSave() {\r\n        let canFormSubmit = true;\r\n        let err = [];\r\n        let l_validate = [];\r\n        err.push(validate(ctlAttribute.current[1]))\r\n        err.push(validate(ctlAttribute.current[0]))\r\n        console.log(err);\r\n\r\n        for (let i = 0; i < err.length; i++) {\r\n            if (err[i].founderror === true) {\r\n                canFormSubmit = false;\r\n                ctlAttribute.current[err[i].arrayindex].error.errorshow = true;\r\n                l_validate.push(err[i])\r\n            }\r\n        }\r\n        if (canFormSubmit === false) {\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isvalidation = true;\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isfocus.focus();\r\n            setRerender(!rerender);\r\n        } else {\r\n            setStartLoader(true);\r\n            fnSendData();\r\n        }\r\n    }\r\n    function fnSendData() {\r\n        console.log(getAppStoreData.burnerid)\r\n        let _getBody = {\r\n            companyName: getAppStoreData.companyName,\r\n            labelname: ctlAttribute.current[0].inputvalue,\r\n            maxseats: ctlAttribute.current[1].inputvalue,\r\n            status: \"open\",\r\n            showbutton: true,\r\n            btn_values: []\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/addbench\",\r\n            apikey: \"SAVE\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n    }\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            initControl();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                console.log(apiKey)\r\n                switch (apiKey) {\r\n                    case \"SAVE\":\r\n                        fnSaveResult();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    function fnSaveResult() {\r\n        console.log(responseData)\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current = {\r\n                name: \"Bench Added Successfully\",\r\n                title: responseData.errormsg[0].labelname,\r\n                photo: \"success\"\r\n            }\r\n            setNotify(true);\r\n        } else {\r\n            console.log(responseData.errormsg)\r\n        }\r\n        setStartLoader(false);\r\n    }\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    Add Menu's\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <div className='border-bottom mb-3 pb-3'>\r\n                                                        <h5 className='fw-semibold mb-1'>\r\n                                                            Restuarant Menu list\r\n                                                        </h5>\r\n                                                        <p>Adding Menu Details to Menu List</p>\r\n                                                    </div>\r\n                                                    <div className=\"border-bottom mb-3\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-6\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='mt-4 d-flex justify-content-end'>\r\n                                                        <OPButton\r\n                                                            ctl_Attribute={ctlAttribute.current[2]}\r\n                                                            handleButtonClick={handleButtonClick}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPAddBench","startInit","setStartInit","useState","startRender","setStartRender","startLoader","setStartLoader","rerender","setRerender","notify","setNotify","ctlAttribute","useRef","ctlNotify","validate","useNavigate","OPValidations","getAppStoreData","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","useEffect","current","arrayindex","csstheme","labletext","classname","id","length","readonly","hinttext","inputvalue","tooltip","place","isfocus","errorshow","isvalidation","mandatory","datatype","error","errormsg","console","log","isAuth","name","title","labelname","photo","fnSaveResult","_jsxs","_Fragment","children","_jsx","OPLoader","className","OPNotification","nameProps","titleProps","photoProps","bool","OPTextBox","ctl_Attribute","OPButton","handleButtonClick","e","btn_id","currentTarget","canFormSubmit","err","l_validate","push","i","founderror","focus","burnerid","_getBody","companyName","maxseats","status","showbutton","btn_values","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnSendData","fnSave"],"sourceRoot":""}