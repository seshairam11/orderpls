{"version":3,"file":"static/js/497.ac31b1ab.chunk.js","mappings":"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","sources":["ComponentOP/OPDropDown.js","PagesOP/OPAddEmployees.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { OPValidations } from \"../CommonOP/OPValidations\";\r\nimport { Tooltip } from \"react-tooltip\";\r\n\r\nexport const OPDropDown = ({ ctl_Attribute, rerender }) => {\r\n    const [l_rerender, l_setRerender] = useState(false)\r\n\r\n    useEffect(() => { }, [rerender]);\r\n    const validate = OPValidations();\r\n    const handleOnFocus = (e) => {\r\n        e.currentTarget.setCustomValidity(\"\")\r\n        ctl_Attribute.tooltip.isvalidation = true;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n    const handleOnChange = (e) => {\r\n        ctl_Attribute.error.errorshow = false;\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        l_setRerender(!l_rerender);\r\n    };\r\n    function handleOnBlur(e) {\r\n        ctl_Attribute.inputvalue = e.currentTarget.value;\r\n        ctl_Attribute.tooltip.isvalidation = false;\r\n        let err = validate(ctl_Attribute);\r\n        if (err.founderror == true) {\r\n            ctl_Attribute.error.errormsg = err.errmsg;\r\n            ctl_Attribute.error.errorshow = true;\r\n            e.currentTarget.setCustomValidity(err.errmsg)\r\n        }\r\n        l_setRerender(!l_rerender);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={ctl_Attribute.csstheme.id} className=\"col-form-label \">{ctl_Attribute.csstheme.labletext}{ctl_Attribute.validate.mandatory ? (<span className=\"text-danger\">&nbsp;*</span>) : null}</label>\r\n            <select\r\n                ref={(el) => {\r\n                    ctl_Attribute.tooltip.isfocus = el\r\n                    ctl_Attribute.tooltip.errorshow = el\r\n                }}\r\n                className={`${ctl_Attribute.csstheme.classname} ${ctl_Attribute.error.errorshow ? \"err-border\" : \"\"}`}\r\n                data-tooltip-content={ctl_Attribute.error.errorshow ? ctl_Attribute.error.errormsg : ctl_Attribute.csstheme.hinttext}\r\n                data-tooltip-id={ctl_Attribute.csstheme.id}\r\n                data-tooltip-place={ctl_Attribute.tooltip.place}\r\n                data-tooltip-class-name={ctl_Attribute.tooltip.classname}\r\n                disabled={ctl_Attribute.csstheme.readonly}\r\n                value={ctl_Attribute.inputvalue}\r\n\r\n                onBlur={handleOnBlur}\r\n                onFocus={handleOnFocus}\r\n                onChange={handleOnChange}\r\n                id={ctl_Attribute.csstheme.id}\r\n            >\r\n                <option id=\"dd-Option\" key=\"000\" value=\"\">\r\n                    Select\r\n                </option>\r\n                {ctl_Attribute.dropdata.map((item, index) => (\r\n                    <option id={`dd-Option ${index}`} key={index} value={item.keylistvalue}>\r\n                        {item.keylistvalue}\r\n                    </option>\r\n                ))};\r\n            </select>\r\n            <Tooltip id={ctl_Attribute.csstheme.id} isOpen={ctl_Attribute.tooltip.isvalidation} />\r\n        </>\r\n    );\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { OPTextBox } from '../ComponentOP/OPTextBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useFetch from '../ApiOP/useFetch';\r\nimport { setlogininfo } from '../brewStore/AppState';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { OPDropDown } from '../ComponentOP/OPDropDown';\r\nimport { OPNotification } from '../ComponentOP/OPNotification';\r\n\r\nexport const OPAddEmployees = () => {\r\n    const [startInit, setStartInit] = useState(true);\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [rerender, setRerender] = useState(true);\r\n    const [notify, setNotify] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlNotify = useRef({})\r\n\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n    const { responseData, isLoadingApi, apiKey, fetchError, serverRequest } = useFetch();\r\n\r\n\r\n    function initControl() {\r\n        let ctlArray = [\r\n            {\r\n                /*txt: First Name  : 0*/\r\n                arrayindex: 0,\r\n                csstheme: {\r\n                    labletext: \"User Name\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_username\",\r\n                    length: 20,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the Employee User name \",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"username\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: Last Name : 1*/\r\n                arrayindex: 1,\r\n                csstheme: {\r\n                    labletext: \"Email\",\r\n                    classname: \"form-control\",\r\n                    id: \"txt_emailid\",\r\n                    length: 20,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the Employee Email Id\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"email\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: Phone Number : 2*/\r\n                arrayindex: 2,\r\n                csstheme: {\r\n                    labletext: \"Phone no\",\r\n                    classname: \"form-control\",\r\n                    id: \"num_phoneno\",\r\n                    length: 10,\r\n                    readonly: false,\r\n                    hinttext: \"Enter your Phone Number\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"phoneno\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: Employee Types : 3*/\r\n                arrayindex: 3,\r\n                csstheme: {\r\n                    labletext: \"Employee Types\",\r\n                    classname: \"form-control\",\r\n                    id: \"sel_Employeetypes\",\r\n                    readonly: false,\r\n                    hinttext:\r\n                        \"Select the usertype for Employee\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"right\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"dropdown\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n                dropdata: [\r\n                    {\r\n                        keylistid: \"11000\",\r\n                        keylistvalue: \"Server\"\r\n                    },\r\n                    {\r\n                        keylistid: \"11001\",\r\n                        keylistvalue: \"Chef\"\r\n                    },\r\n                    {\r\n                        keylistid: '11002',\r\n                        keylistvalue: \"Casher\"\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                /*txt: Password : 4*/\r\n                arrayindex: 4,\r\n                csstheme: {\r\n                    labletext: \"Password\",\r\n                    classname: \"form-control\",\r\n                    id: \"text-email\",\r\n                    length: 50,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the Employee Password\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"text\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*txt: Confirm Password : 5*/\r\n                arrayindex: 5,\r\n                csstheme: {\r\n                    labletext: \"Confirm Password\",\r\n                    classname: \"form-control\",\r\n                    id: \"text-confirmpassword\",\r\n                    length: 50,\r\n                    readonly: false,\r\n                    hinttext: \"Enter the Employee Confirm Password\",\r\n                },\r\n                inputvalue: \"\",\r\n                tooltip: {\r\n                    place: \"bottom\",\r\n                    classname: \"tooltip-react\",\r\n                    isfocus: \"\",\r\n                    errorshow: \"\",\r\n                    isvalidation: false,\r\n                },\r\n                validate: {\r\n                    mandatory: true,\r\n                    datatype: \"dropdown\",\r\n                },\r\n                error: {\r\n                    errorshow: false,\r\n                    errormsg: \"The field is mandatory\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:Register : 6*/\r\n                arrayindex: 6,\r\n                csstheme: {\r\n                    labletext: \"Register\",\r\n                    classname: \"btn btn-primary me-2\",\r\n                    id: \"btn_register\",\r\n                },\r\n            }\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n        setStartInit(false);\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n\r\n    function checkPassword(p1, p2) {\r\n        if (p1 === p2) {\r\n            return true\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n        console.log(btn_id);\r\n        switch (btn_id) {\r\n            case \"btn_register\":\r\n                fnRegisterEmployee();\r\n                break;\r\n        }\r\n    }\r\n    function fnRegisterEmployee() {\r\n        let canFormSubmit = true;\r\n        let err = [];\r\n        let l_validate = [];\r\n        err.push(validate(ctlAttribute.current[5]))\r\n        err.push(validate(ctlAttribute.current[4]))\r\n        err.push(validate(ctlAttribute.current[3]))\r\n        err.push(validate(ctlAttribute.current[2]))\r\n        err.push(validate(ctlAttribute.current[1]))\r\n        err.push(validate(ctlAttribute.current[0]))\r\n        console.log(err);\r\n\r\n        for (let i = 0; i < err.length; i++) {\r\n            if (err[i].founderror === true) {\r\n                canFormSubmit = false;\r\n                ctlAttribute.current[err[i].arrayindex].error.errorshow = true;\r\n                l_validate.push(err[i])\r\n            }\r\n        }\r\n        if (canFormSubmit === false) {\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isvalidation = true;\r\n            ctlAttribute.current[l_validate[l_validate.length - 1].arrayindex].tooltip.isfocus.focus();\r\n            setRerender(!rerender);\r\n        } else {\r\n            if (checkPassword(ctlAttribute.current[4].inputvalue, ctlAttribute.current[5].inputvalue)) {\r\n                setStartLoader(true);\r\n                fnSendData()\r\n            } else {\r\n                ctlAttribute.current[4].error.errorshow = true;\r\n                ctlAttribute.current[5].error.errorshow = true;\r\n                ctlAttribute.current[5].error.errormsg = \"Check your password\";\r\n                ctlAttribute.current[5].tooltip.isvalidation = true;\r\n                ctlAttribute.current[5].tooltip.isfocus.focus();\r\n            }\r\n        }\r\n    }\r\n    function fnSendData() {\r\n        let _getBody = {\r\n            userName: ctlAttribute.current[0].inputvalue,\r\n            mailID: ctlAttribute.current[1].inputvalue,\r\n            phone: ctlAttribute.current[2].inputvalue,\r\n            employeeType: ctlAttribute.current[3].inputvalue,\r\n            password: ctlAttribute.current[4].inputvalue,\r\n            room: getAppStoreData.room,\r\n            companyName: getAppStoreData.companyName,\r\n        }\r\n\r\n        let serverRequestParam = {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify(_getBody),\r\n            apiUrl: \"/api/v1/addemployees\",\r\n            apikey: \"ADDEMP\"\r\n        };\r\n        serverRequest(serverRequestParam);\r\n    }\r\n\r\n    function fnAddEmpResult() {\r\n        console.log(responseData);\r\n        if (responseData.isAuth) {\r\n            ctlNotify.current.name = \"Success\";\r\n            ctlNotify.current.title = responseData.errormsg;\r\n            ctlNotify.current.photo = \"success\";\r\n            ctlAttribute.current[0].inputvalue = \"\";\r\n            ctlAttribute.current[1].inputvalue = \"\";\r\n            ctlAttribute.current[2].inputvalue = \"\";\r\n            ctlAttribute.current[3].inputvalue = \"\";\r\n            ctlAttribute.current[4].inputvalue = \"\";\r\n            ctlAttribute.current[5].inputvalue = \"\";\r\n        } else {\r\n            ctlNotify.current.name = \"Error\";\r\n            ctlNotify.current.title = responseData.errormsg;\r\n            ctlNotify.current.photo = \"error\";\r\n            if (responseData.errormsg === \"Username already registered\") {\r\n\r\n                ctlAttribute.current[0].error.errorshow = true;\r\n                ctlAttribute.current[0].error.errormsg = responseData.errormsg;\r\n                ctlAttribute.current[0].tooltip.isvalidation = true;\r\n                ctlAttribute.current[0].tooltip.isfocus.focus();\r\n            } else {\r\n                if (responseData.errormsg === \"EmailID already registered\") {\r\n\r\n                    ctlAttribute.current[1].error.errorshow = true;\r\n                    ctlAttribute.current[1].error.errormsg = responseData.errormsg;\r\n                    ctlAttribute.current[1].tooltip.isvalidation = true;\r\n                    ctlAttribute.current[1].tooltip.isfocus.focus();\r\n                } else {\r\n                    if (responseData.errormsg === \"phoneno already registered\") {\r\n\r\n                        ctlAttribute.current[2].error.errorshow = true;\r\n                        ctlAttribute.current[2].error.errormsg = responseData.errormsg;\r\n                        ctlAttribute.current[2].tooltip.isvalidation = true;\r\n                        ctlAttribute.current[2].tooltip.isfocus.focus();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setNotify(true);\r\n        setStartLoader(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (startInit === true) {\r\n            initControl();\r\n        } else {\r\n            if (isLoadingApi) {\r\n                console.log(apiKey)\r\n                switch (apiKey) {\r\n                    case \"ADDEMP\":\r\n                        fnAddEmpResult();\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [startInit, isLoadingApi]);\r\n\r\n    useEffect(() => {\r\n        if (notify) {\r\n            const closeNotify = setInterval(() => {\r\n                setNotify(false);\r\n            }, 2000);\r\n            return () => clearInterval(closeNotify);\r\n        }\r\n    }, [notify]);\r\n\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <OPNotification\r\n                            nameProps={ctlNotify.current.name}\r\n                            titleProps={ctlNotify.current.title}\r\n                            photoProps={ctlNotify.current.photo}\r\n                            bool={notify}\r\n                        />\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    Add Employee's\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\">\r\n                                                    <div className='border-bottom mb-3 pb-3'>\r\n                                                        <h5 className='fw-semibold mb-1'>\r\n                                                            Employee Signup Detail's\r\n                                                        </h5>\r\n                                                        <p>Provide the Employee Signup Detail's</p>\r\n                                                    </div>\r\n                                                    <div className=\"border-bottom mb-3\">\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[0]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[1]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[2]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"row\">\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPDropDown\r\n                                                                        ctl_Attribute={ctlAttribute.current[3]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[4]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"col-md-4\">\r\n                                                                <div className=\"mb-3\">\r\n                                                                    <OPTextBox\r\n                                                                        ctl_Attribute={ctlAttribute.current[5]}\r\n                                                                        rerender={rerender}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className='mt-4 d-flex justify-content-end'>\r\n                                                        <OPButton\r\n                                                            ctl_Attribute={ctlAttribute.current[6]}\r\n                                                            handleButtonClick={handleButtonClick}\r\n                                                        />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPDropDown","_ref","ctl_Attribute","rerender","l_rerender","l_setRerender","useState","useEffect","validate","OPValidations","_jsxs","_Fragment","children","htmlFor","csstheme","id","className","labletext","mandatory","_jsx","ref","el","tooltip","isfocus","errorshow","classname","error","errormsg","hinttext","place","disabled","readonly","value","inputvalue","onBlur","e","currentTarget","isvalidation","err","founderror","errmsg","setCustomValidity","onFocus","onChange","dropdata","map","item","index","keylistvalue","Tooltip","isOpen","OPAddEmployees","startInit","setStartInit","startRender","setStartRender","startLoader","setStartLoader","setRerender","notify","setNotify","ctlAttribute","useRef","ctlNotify","getAppStoreData","useSelector","state","appstate","login_info","responseData","isLoadingApi","apiKey","fetchError","serverRequest","useFetch","current","arrayindex","length","datatype","keylistid","console","log","isAuth","name","title","photo","focus","closeNotify","setInterval","clearInterval","OPLoader","OPNotification","nameProps","titleProps","photoProps","bool","OPTextBox","OPButton","handleButtonClick","btn_id","canFormSubmit","l_validate","push","i","p1","p2","_getBody","userName","mailID","phone","employeeType","password","room","companyName","serverRequestParam","method","headers","body","JSON","stringify","apiUrl","apikey","fnSendData","fnRegisterEmployee"],"sourceRoot":""}