{"version":3,"file":"static/js/925.21f06ade.chunk.js","mappings":"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","sources":["CommonOP/OPValidations.js","ComponentOP/OPGroupButton.js","ComponentOP/OPVerticalTable.js","PagesOP/OPChefOrderTaking.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport const OPValidations = () => {\r\n  return function validateControls(ctl_attribute) {\r\n\r\n    if (ctl_attribute.validate.mandatory === true) {\r\n      let brewErr = checkMandatory(ctl_attribute);\r\n      if (brewErr.founderror === true) {\r\n        return brewErr;\r\n      }\r\n    }\r\n\r\n    return checkValidateDataType(ctl_attribute);\r\n  };\r\n\r\n  function checkValidateDataType(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue != \"\") {\r\n      switch (ctl_attribute.validate.datatype) {\r\n        case \"email\":\r\n          let retvalidemail = validateEmail(ctl_attribute.inputvalue);\r\n          if (retvalidemail === null) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"No Valid Email address entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"phoneno\":\r\n          let retvalidphone = validatePhoneNo(ctl_attribute.inputvalue);\r\n          let retvalidphonecode = validatePhoneCode(ctl_attribute.inputkey);\r\n          if (retvalidphone === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Phone no entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          } else if (retvalidphonecode === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Phone Code doesn't been empty\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"numeric\":\r\n          let retvalidnumeric = validateIsNumber(ctl_attribute.inputvalue);\r\n          if (retvalidnumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Accepts Only Numeric Field\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"loginid\":\r\n          let retvalidLoginid = validateIsLoginID(ctl_attribute.inputvalue);\r\n          if (retvalidLoginid === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Field entered\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"aadharno\":\r\n          let retvalidAadhar = validateAadharNo(ctl_attribute.inputvalue);\r\n          if (retvalidAadhar === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Aadhar no\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alpha\":\r\n          let retvalidAlpha = validateAlpha(ctl_attribute.inputvalue);\r\n          if (retvalidAlpha === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only Alphabet\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"alphanumeric\":\r\n          let retvalidAlphaNumeric = validateAlphaNumeric(ctl_attribute.inputvalue);\r\n          if (retvalidAlphaNumeric === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid field Only AlphaNumeric\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"dropdown\":\r\n          let retvalidDropDown = validateDropDown(ctl_attribute.inputvalue);\r\n          if (retvalidDropDown === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Selection\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"username\":\r\n          let retvalidUserName = validateUserName(ctl_attribute.inputvalue);\r\n          if (retvalidUserName === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid Syntax only (@ and _ )\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n\r\n        case \"hotelcode\":\r\n          let retvalidGOTID = validateHotelCode(ctl_attribute.inputvalue);\r\n          if (retvalidGOTID === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Invalid offer ID\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        case \"searchBox\":\r\n          let retvalidssearchbox = validateSearchBox(ctl_attribute);\r\n          if (retvalidssearchbox === false) {\r\n            brewError.controlid = ctl_attribute.csstheme.id;\r\n            brewError.errmsg = \"Not in Menu\";\r\n            brewError.founderror = true;\r\n            brewError.arrayindex = ctl_attribute.arrayindex;\r\n          }\r\n          break;\r\n        default:\r\n          brewError.controlid = ctl_attribute.csstheme.id;\r\n          brewError.errmsg = \"\";\r\n          brewError.founderror = false;\r\n          brewError.arrayindex = ctl_attribute.arrayindex;\r\n          break;\r\n      }\r\n    }\r\n    return brewError;\r\n  }\r\n\r\n  function validatePhoneNo(phoneno) {\r\n    let a = /^\\d{10}$/;\r\n    return a.test(phoneno);\r\n  }\r\n  function validateHotelCode(hotelcode) {\r\n    let a = /^\\d{9}$/;\r\n    return a.test(hotelcode);\r\n  }\r\n\r\n  function validateUserName(username) {\r\n    let s = /^[a-zA-Z0-9\\_\\@]+$/;\r\n    return s.test(username)\r\n  }\r\n\r\n  function validateAadharNo(aadharno) {\r\n    let s = /^\\d{12}$/;\r\n    return s.test(aadharno);\r\n  }\r\n  function validateAlpha(alpha) {\r\n    let s = /^[A-Za-z\\ ]+$/;\r\n    return s.test(alpha);\r\n  }\r\n  function validateAlphaNumeric(alphanumeric) {\r\n    let s = /^[0-9a-zA-Z\\ ]+$/;\r\n    return s.test(alphanumeric);\r\n  }\r\n  function validatePhoneCode(phonecode) {\r\n    let _bool = true;\r\n    if (phonecode === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateDropDown(dropdown) {\r\n    let _bool = true;\r\n    if (dropdown === \"\") {\r\n      _bool = false;\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateEmail(email) {\r\n    return email\r\n      .toLowerCase()\r\n      .match(\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n      );\r\n  }\r\n  function isOnlyNumbers(input) {\r\n    const numberRegex = /^\\d+$/;\r\n    return numberRegex.test(input);\r\n  }\r\n  function validateIsLoginID(loginid) {\r\n    if (isOnlyNumbers(loginid)) {\r\n      return validatePhoneNo(loginid);\r\n    }else if(validateEmail(loginid)){\r\n      return true;\r\n    }else if(validateUserName(loginid)){\r\n      return true;\r\n    }else{\r\n      return false;\r\n    }\r\n\r\n  }\r\n  function validateSearchBox(attribute) {\r\n    let _filterarr = attribute.dropdownlist.filter(item => item.m_value === attribute.inputvalue);\r\n    let _bool = true\r\n    if (_filterarr.length === 0) {\r\n      _bool = false\r\n    }\r\n    return _bool;\r\n  }\r\n  function validateIsNumber(ivalue) {\r\n    return !isNaN(parseFloat(ivalue)) && isFinite(ivalue);\r\n  }\r\n  function checkMandatory(ctl_attribute) {\r\n    let brewError = {};\r\n    if (ctl_attribute.inputvalue === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"This field is mandatory\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    } else if (ctl_attribute.inputkey === \"\") {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"Invalid Selection\";\r\n      brewError.founderror = true;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    else {\r\n      brewError.controlid = ctl_attribute.csstheme.id;\r\n      brewError.errmsg = \"\";\r\n      brewError.founderror = false;\r\n      brewError.arrayindex = ctl_attribute.arrayindex;\r\n    }\r\n    return brewError;\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport const OPGroupButton = ({ groupBtnName, groupBtnData, handleGroupButtonClick }) => {\r\n    return (\r\n        <div className='tasks-activity tasks collapse show'>\r\n            <ul className='row'>\r\n                {groupBtnData.map((item, index) => {\r\n                    return (\r\n                        item.showbutton && (\r\n                            <li key={index}\r\n                                className='d-flex flex-column col-xxl-2 col-xl-3 col-md-4 col-sm-6 ' style={{ padding: '12px' }}\r\n                            >\r\n                                <button className='grpbtn btn2lnk' onClick={(e) => { handleGroupButtonClick(groupBtnName, index) }}>\r\n                                    <div className='grpbtn-text-content'>\r\n                                        <p style={{ color: \"#595757\" }}>{item.labelname}</p>\r\n                                    </div>\r\n                                    <div className='grpbtn-bottom-content'>\r\n                                        <div className='d-flex' style={{ gap: \"5px\" }} >\r\n                                            {item.status === \"open\" &&\r\n                                                <span className='grpbtn-single-seats'>\r\n                                                    {item.maxseats}\r\n                                                    <i className=\"ti ti-user-filled\" style={{ color: \"#228B22\", fontSize: \"1.2em\" }} ></i> {/* Green icon */}\r\n                                                </span>\r\n                                            }\r\n                                            {item.status !== \"open\" &&\r\n                                                <span className='grpbtn-single-seats'>\r\n                                                    {item.maxseats}\r\n                                                    <i className=\"ti ti-user-filled\" style={{ color: \"#DC143C\", fontSize: \"1.2em\" }} ></i> {/* Red icon */}\r\n                                                </span>\r\n                                            }\r\n                                            <span className='grpbtn-group-seats'>\r\n                                                {item.status === \"open\" &&\r\n                                                    Array.from({ length: item.maxseats }).map((_, index) => (\r\n                                                        <i key={index} className=\"ti ti-user-filled soft-success\" style={{ color: \"#228B22\", fontSize: \"1.2em\" }}></i>\r\n                                                    ))}\r\n                                                {item.status !== \"open\" &&\r\n                                                    Array.from({ length: item.maxseats }).map((_, index) => (\r\n                                                        <i key={index} className=\"ti ti-user-filled \" style={{ color: \"#DC143C\", fontSize: \"1.2em\" }}></i>\r\n                                                    ))}\r\n                                            </span>\r\n                                        </div>\r\n                                        <div>\r\n                                            {item.status === \"open\" &&\r\n                                                <>\r\n                                                    <i className=\"fa-solid fa-lock-open fa-bounce mr-5-im\"></i>\r\n                                                    Open...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"process\" &&\r\n                                                <>\r\n                                                    <i className=\"fas fa-spinner fa-spin me-2 mr-5-im\"></i>\r\n                                                    Process...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"close\" &&\r\n                                                <>\r\n                                                    <i className=\"fa-solid fa-lock fa-shake mr-5-im\"></i>\r\n                                                    Close...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"waiting\" &&\r\n                                                <>\r\n                                                    <i className=\"fa-solid fa-hourglass-start fa-fade mr-5-im\"></i>\r\n                                                    Waiting...\r\n                                                </>\r\n                                            }\r\n                                            {item.status === \"completed\" &&\r\n                                                <>\r\n                                                    <i class=\"fa-solid fa-money-bill fa-flip mr-5-im\"></i>\r\n                                                    Completed...\r\n                                                </>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </button>\r\n                            </li>\r\n                        )\r\n                    )\r\n                }\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react'\r\nimport \"../assets/css/dataTables.bootstrap5.min.css\"\r\nimport \"../index.css\"\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const OPVerticalTable = ({\r\n    tablename,\r\n    actionButton,\r\n    tableMetaData,\r\n    colMetaData,\r\n    tableData,\r\n    handleChangeSearch,\r\n    handleTableActionClick,\r\n    handleSort,\r\n    handleKeyDown,\r\n    isTableChanged, }) => {\r\n    const [openIndex, setOpenIndex] = useState(null);\r\n    const optionBoxRefs = useRef([]);\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n\r\n    useEffect(() => { handleDropDownList() }, [openIndex])\r\n\r\n    function handleDropDownList() {\r\n        if (openIndex !== null) {\r\n            const buttonRect = optionBoxRefs.current[openIndex].button.getBoundingClientRect();\r\n            const lstRect = document.getElementById(`optmenu${openIndex}`).getBoundingClientRect();\r\n            const innerHight = window.innerHeight;\r\n            // Replace with your div's ID          \r\n            const spaceBelow = innerHight - buttonRect.bottom;\r\n            const optionBox = optionBoxRefs.current[openIndex].optionBox;\r\n            if (optionBox) {\r\n                if (spaceBelow < lstRect.height) {\r\n                    // Not enough space below, position above              \r\n                    optionBox.style.top = `-${lstRect.height}px`;\r\n                } else {\r\n                    optionBox.style.top = \"33px\"\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function handleOnBlur() {\r\n        setOpenIndex(null);\r\n    }\r\n    function handleOnFocus(index) {\r\n        setOpenIndex(index);\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"row dt-row\">\r\n            <div className=\"col-sm-12 table-responsive\"\r\n                style={{ overflowX: 'visible' }}\r\n                id='orderMenu'>\r\n                <table className='table dataTable no-footer'>\r\n                    <thead className='thead-light'>\r\n                        <tr>\r\n                            {colMetaData.map(item => {\r\n                                return (<th className='sorting'\r\n                                    // data-bs-toggle=\"dropdown\"\r\n                                    key={item.h_colindex}\r\n                                    style={{ width: (item.h_width) }}\r\n                                >\r\n                                    {item.h_name}\r\n                                </th>)\r\n                            })}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableData.map((item, index) => {\r\n                            return (\r\n                                item.showrow && (\r\n                                    <tr key={`list ${index}`}>\r\n                                        {item.table_value.map((tdata, tindex) => {\r\n                                            return (<td key={tdata.t_key} >\r\n                                                {tindex !== 2 && (\r\n                                                    <>\r\n                                                        {tdata.t_value}\r\n                                                    </>\r\n                                                )}\r\n                                                {tindex === 2 && (\r\n                                                    <span className={`badge ${tdata.t_value == \"New\" ? \"bg-success\" : tdata.t_value === \"Waiting\" ? \"bg-warning\" : tdata.t_value === \"Processing\" ? \"bg-secondary\" : tdata.t_value === \"Completed\" ? \"bg-info\" : \"\"}`} >\r\n                                                        <span className=\"badge-label\">\r\n                                                            {tdata.t_value}\r\n                                                        </span>\r\n                                                    </span>\r\n                                                )}\r\n                                            </td>)\r\n                                        })}\r\n                                        {getAppStoreData.usertype ===\"server\" && actionButton.hasAction && (<td>\r\n                                            <div className='dropdown table-action '>\r\n                                                <button\r\n                                                    className='action-icon'\r\n                                                    id={`optbtn${index}`}\r\n                                                    style={{ position: 'relative' }}\r\n                                                    ref={(el) => { optionBoxRefs.current[index] = { button: el } }}\r\n                                                    onClick={() => { handleOnFocus(index) }}\r\n                                                    onBlur={handleOnBlur}\r\n                                                >\r\n                                                    <i className='fa fa-ellipsis-v'></i>\r\n                                                </button>\r\n                                                {openIndex === index && (\r\n                                                    <ul style={{ position: 'absolute', zIndex: 1000, right: '45px' }}\r\n                                                        ref={(el) => (optionBoxRefs.current[index].optionBox = el)}\r\n                                                        id={`optmenu${index}`}\r\n                                                        className=' dropdown-menu dropdown-menu-right show'>\r\n                                                        {actionButton.canEditRow && (\r\n                                                            <li\r\n                                                                className='dropdown-item'\r\n                                                                style={\r\n                                                                    ![\"New\", \"Waiting\"].includes(item.table_value[2].t_value)\r\n                                                                        ? { cursor: \"not-allowed\", opacity: \"0.7\", backgroundColor: \"#f0f0f0\" }\r\n                                                                        : {}\r\n                                                                }\r\n                                                                id={item.rowid}\r\n                                                                onMouseDown={(e) => {\r\n                                                                    if ([\"New\", \"Waiting\"].includes(item.table_value[2].t_value)) {\r\n                                                                        handleTableActionClick(tablename, index, item.rowmode, 1);\r\n                                                                        setOpenIndex(null);\r\n                                                                    }\r\n                                                                }}\r\n                                                            >\r\n                                                                <i className='ti ti-edit text-blue'></i>\r\n                                                                &nbsp;Edit\r\n                                                            </li>)}\r\n                                                        {actionButton.canDeleteRow && (\r\n                                                            <li\r\n                                                                className='dropdown-item'\r\n                                                                style={\r\n                                                                    ![\"New\", \"Waiting\"].includes(item.table_value[2].t_value)\r\n                                                                        ? { cursor: \"not-allowed\", opacity: \"0.7\", backgroundColor: \"#f0f0f0\" }\r\n                                                                        : {}\r\n                                                                }\r\n                                                                id={item.rowid}\r\n                                                                onMouseDown={(e) => {\r\n                                                                    if ([\"New\", \"Waiting\"].includes(item.table_value[2].t_value)) {\r\n                                                                        handleTableActionClick(tablename, index, item.rowmode, 2);\r\n                                                                        setOpenIndex(null);\r\n                                                                    }\r\n                                                                }}>\r\n                                                                <i className='ti ti-trash text-danger'></i>\r\n                                                                &nbsp;Delete\r\n                                                            </li>)}\r\n                                                    </ul>)}\r\n                                            </div>\r\n                                        </td>)}\r\n                                    </tr>\r\n                                ))\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div >\r\n        </div >\r\n    </>);\r\n}","import React, { useEffect, useRef, useState } from 'react'\r\nimport { OPValidations } from '../CommonOP/OPValidations';\r\nimport { OPLoader } from '../ComponentOP/OPLoader';\r\nimport { OPGroupButton } from '../ComponentOP/OPGroupButton';\r\nimport { OPButton } from '../ComponentOP/OPButton';\r\nimport { OPVerticalTable } from '../ComponentOP/OPVerticalTable';\r\nimport { io } from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const OPChefOrderTaking = () => {\r\n    const [startRender, setStartRender] = useState(false);\r\n    const [startLoader, setStartLoader] = useState(true);\r\n    const [sideBar, setSideBar] = useState(false);\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    const ctlAttribute = useRef([]);\r\n    const ctlBench = useRef({});\r\n    const tbl_menu = useRef([]);\r\n    const responce_data = useRef([]);\r\n\r\n    const socketUrl = 'https://orderpls.onrender.com'\r\n    const socketRef = useRef(null);\r\n    const validate = OPValidations();\r\n    const getAppStoreData = useSelector((state) => state.appstate.login_info);\r\n\r\n    function initControl(responceData) {\r\n        let ctlArray = [\r\n            {\r\n                /*btn:cross : 0*/\r\n                arrayindex: 0,\r\n                csstheme: {\r\n                    labletext: \"\",\r\n                    classname: \"btn-close custom-btn-close border p-1 me-0 d-flex align-items-center justify-content-center rounded-circle\",\r\n                    id: \"btn_cross\",\r\n                    icon: \"ti ti-x\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:Take : 1*/\r\n                arrayindex: 1,\r\n                csstheme: {\r\n                    labletext: \" Take\",\r\n                    classname: \"btn btn-primary\",\r\n                    id: \"btn_take\",\r\n                },\r\n            },\r\n            {\r\n                /*btn:cancel : 2*/\r\n                arrayindex: 2,\r\n                csstheme: {\r\n                    labletext: \"Cancel\",\r\n                    classname: \"btn btn-light me-2\",\r\n                    id: \"btn_cancel\",\r\n                },\r\n            },\r\n        ]\r\n        ctlAttribute.current = ctlArray;\r\n        fnCreateBench(responceData.hotelBench);\r\n        fnBuildMenuList();\r\n        setStartRender(true);\r\n        setStartLoader(false);\r\n    }\r\n    function fnCreateBench(l_responceData) {\r\n        responce_data.current = l_responceData;\r\n\r\n        const benchlst = l_responceData\r\n            .filter(sts => sts.status == \"waiting\")\r\n\r\n        let l_bench = {\r\n            groupbtnname: \"beanchlst\",\r\n            groupbtnselectedname: null,\r\n            groupbtndata: benchlst\r\n        }\r\n        ctlBench.current = l_bench;\r\n    }\r\n\r\n    function fnBuildMenuList() {\r\n        let l_tbl_menu = {\r\n            tablename: \"tbl_orderlist\",\r\n            grpbtnrowid: null,\r\n            grpbtnindex: null,\r\n            tableindex: null,\r\n            actionButton: {\r\n                hasAction: true,\r\n                hasStatus: true,\r\n                canEditRow: true,\r\n                canDeleteRow: true,\r\n            },\r\n            tableMetaData: {\r\n                showPagination: false,\r\n                showSearch: false,\r\n            },\r\n            colMetaData: [\r\n                {\r\n                    h_colindex: 0,\r\n                    h_name: \"Orders\",\r\n                    h_width: \"200px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 1,\r\n                    h_name: \"Qty\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n                {\r\n                    h_colindex: 2,\r\n                    h_name: \"Sts\",\r\n                    h_width: \"100px\",\r\n                    h_txtalign: \"left\",\r\n                    h_navigate: \"/home\",\r\n                },\r\n            ],\r\n            tableData: [],\r\n        };\r\n        tbl_menu.current = l_tbl_menu;\r\n    }\r\n\r\n    function fnTakeSelectedButton() {\r\n        const docId = tbl_menu.current.grpbtnrowid;\r\n        const newContent = tbl_menu.current.tableData.map(item => ({\r\n            showrow: item.showrow,\r\n            table_value: [\r\n                {\r\n                    t_key: 0,\r\n                    t_value: item.table_value[0].t_value\r\n                },\r\n                {\r\n                    t_key: 1,\r\n                    t_value: item.table_value[1].t_value\r\n                },\r\n                {\r\n                    t_key: 2,\r\n                    t_value: item.table_value[2].t_value === \"Waiting\" || item.table_value[2].t_value === \"New\" ? \"Processing\" : \"Completed\"\r\n                },\r\n            ]\r\n        }));\r\n        const companyName = getAppStoreData.companyName;\r\n        socketRef.current.emit('updateChefOrderTaking', docId, newContent, companyName);\r\n\r\n        document.body.style = \"\";\r\n        setSideBar(false);\r\n    }\r\n    function handleButtonClick(e) {\r\n        let btn_id = e.currentTarget.id;\r\n\r\n        switch (btn_id) {\r\n\r\n            case \"btn_cross\":\r\n            case \"blurdiv\":\r\n            case \"btn_cancel\":\r\n                document.body.style = \"\";\r\n                setSideBar(false);\r\n                break;\r\n            case \"btn_take\":\r\n                fnTakeSelectedButton();\r\n                break;\r\n        }\r\n    }\r\n    function handleGroupButtonClick(groupBtnName, index) {\r\n\r\n        switch (groupBtnName) {\r\n            case \"beanchlst\":\r\n                document.body.style.overflow = \"hidden\";\r\n                const clonedData = structuredClone(ctlBench.current.groupbtndata[index].btn_values);\r\n                ctlBench.current.groupbtnselectedname = ctlBench.current.groupbtndata[index].labelname;\r\n                tbl_menu.current.grpbtnrowid = ctlBench.current.groupbtndata[index]._id;\r\n                tbl_menu.current.grpbtnindex = index;\r\n                tbl_menu.current.tableData = clonedData;\r\n                break;\r\n        }\r\n        setSideBar(true);\r\n    }\r\n    function handleTableActionClick(tablename, index, rowmode, rowaction) {\r\n        switch (tablename) {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // Initialize the socket connection only once\r\n        socketRef.current = io(socketUrl);\r\n\r\n        // Emit event to start server order placing\r\n        socketRef.current.emit('joinChefOrderTaking', getAppStoreData.companyName);\r\n\r\n        // Listen for the 'sendChefrOrderTaking' event from the server (runs only once)\r\n        socketRef.current.on('sendChefrOrderTaking', (responceData) => {\r\n            initControl(responceData);\r\n        });\r\n\r\n        // Cleanup: Disconnect the socket when the component unmounts\r\n        return () => {\r\n            if (socketRef.current) {\r\n                socketRef.current.disconnect();\r\n            }\r\n        };\r\n    }, []); // Empty dependency array, only runs once when the component mounts\r\n\r\n    useEffect(() => {\r\n        // Listen for the 'documentUpdated' event continuously\r\n        socketRef.current.on('documentUpdated', (docId, newContent, status) => {\r\n            const index = responce_data.current.findIndex(item => item._id === docId);\r\n            const newArr = responce_data.current.filter(item => item._id === docId);\r\n            newArr[0].status = status;\r\n            newArr[0].btn_values = newContent;\r\n            const canArr = responce_data.current.splice(index, 1, newArr[0]);\r\n            fnCreateBench(responce_data.current);\r\n            setRerender(prevRerender => !prevRerender);\r\n        });\r\n\r\n        return () => {\r\n        };\r\n    }, []);\r\n    return (\r\n        <>\r\n            {startLoader && (<OPLoader />)}\r\n            {startRender && (\r\n                <>\r\n                    <div className=\"page-wrapper\">\r\n                        <div className='content'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"page-header\">\r\n                                        <div className=\"row align-items-center\">\r\n                                            <div className=\"col-sm-4\">\r\n                                                <h4 className='page-title'>\r\n                                                    Order Placing\r\n                                                </h4>\r\n                                            </div>\r\n                                            <div className=\"col-sm-8 text-sm-end\">\r\n                                                <div className=\"head-icons\"></div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-lg-12\">\r\n                                            <div className=\"card\">\r\n                                                <div className=\"card-body\" id='card-body'>\r\n                                                    <div className='border-bottom mb-3 pb-3'>\r\n                                                        <h5 className='fw-semibold mb-1'>\r\n                                                            Bench's\r\n                                                        </h5>\r\n                                                        <p>Select the Bench that you want to place the order</p>\r\n                                                    </div>\r\n                                                    <OPGroupButton\r\n                                                        groupBtnName={ctlBench.current.groupbtnname}\r\n                                                        groupBtnData={ctlBench.current.groupbtndata}\r\n                                                        handleGroupButtonClick={handleGroupButtonClick}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div >\r\n                    <div className={`offcanvas offcanvas-end offcanvas-large ${(sideBar ? \"show\" : \"hiding\")}`}>\r\n                        {sideBar && (\r\n                            <>\r\n                                <div className='offcanvas-header border-bottom'>\r\n                                    <h4>{ctlBench.current.groupbtnselectedname}</h4>\r\n                                    <OPButton\r\n                                        ctl_Attribute={ctlAttribute.current[0]}\r\n                                        handleButtonClick={handleButtonClick}\r\n                                    />\r\n                                </div>\r\n                                <div className='offcanvas-body'>\r\n                                    <h4>Order</h4>\r\n                                    <OPVerticalTable\r\n                                        tablename={tbl_menu.current.tablename}\r\n                                        actionButton={tbl_menu.current.actionButton}\r\n                                        tableMetaData={tbl_menu.current.tableMetaData}\r\n                                        colMetaData={tbl_menu.current.colMetaData}\r\n                                        tableData={tbl_menu.current.tableData}\r\n                                        handleTableActionClick={handleTableActionClick}\r\n                                    />\r\n                                    <div className=\"mt-4 d-flex justify-content-end\" >\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[2]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                        <OPButton\r\n                                            ctl_Attribute={ctlAttribute.current[1]}\r\n                                            handleButtonClick={handleButtonClick}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    {sideBar && (\r\n                        <div className='offcanvas-backdrop fade show' id='blurdiv' onClick={handleButtonClick} ></div>\r\n                    )}\r\n\r\n                </>\r\n            )}\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n"],"names":["OPValidations","ctl_attribute","validate","mandatory","brewErr","brewError","inputvalue","controlid","csstheme","id","errmsg","founderror","arrayindex","inputkey","checkMandatory","datatype","validateEmail","retvalidphone","validatePhoneNo","retvalidphonecode","phonecode","_bool","validatePhoneCode","ivalue","isNaN","parseFloat","isFinite","loginid","input","test","validateUserName","validateIsLoginID","aadharno","alpha","alphanumeric","dropdown","validateDropDown","hotelcode","attribute","_filterarr","dropdownlist","filter","item","m_value","length","validateSearchBox","checkValidateDataType","phoneno","username","email","toLowerCase","match","OPGroupButton","_ref","groupBtnName","groupBtnData","handleGroupButtonClick","_jsx","className","children","map","index","showbutton","style","padding","_jsxs","onClick","e","color","labelname","gap","status","maxseats","fontSize","Array","from","_","_Fragment","class","OPVerticalTable","tablename","actionButton","tableMetaData","colMetaData","tableData","handleChangeSearch","handleTableActionClick","handleSort","handleKeyDown","isTableChanged","openIndex","setOpenIndex","useState","optionBoxRefs","useRef","getAppStoreData","useSelector","state","appstate","login_info","handleOnBlur","useEffect","buttonRect","current","button","getBoundingClientRect","lstRect","document","getElementById","spaceBelow","window","innerHeight","bottom","optionBox","height","top","handleDropDownList","overflowX","width","h_width","h_name","h_colindex","showrow","table_value","tdata","tindex","t_value","t_key","usertype","hasAction","position","ref","el","handleOnFocus","onBlur","zIndex","right","canEditRow","includes","cursor","opacity","backgroundColor","rowid","onMouseDown","rowmode","canDeleteRow","OPChefOrderTaking","startRender","setStartRender","startLoader","setStartLoader","sideBar","setSideBar","rerender","setRerender","ctlAttribute","ctlBench","tbl_menu","responce_data","socketRef","initControl","responceData","labletext","classname","icon","fnCreateBench","hotelBench","l_tbl_menu","grpbtnrowid","grpbtnindex","tableindex","hasStatus","showPagination","showSearch","h_txtalign","h_navigate","fnBuildMenuList","l_responceData","l_bench","groupbtnname","groupbtnselectedname","groupbtndata","sts","handleButtonClick","currentTarget","body","docId","newContent","companyName","emit","fnTakeSelectedButton","io","on","disconnect","findIndex","_id","newArr","btn_values","splice","prevRerender","OPLoader","overflow","clonedData","structuredClone","OPButton","ctl_Attribute","rowaction"],"sourceRoot":""}